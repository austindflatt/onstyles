'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var styles = require('@mantine/styles');

const sizes = {
  xs: 1,
  sm: 2,
  md: 3,
  lg: 4,
  xl: 5
};
var useStyles = styles.createStyles((theme, { size, variant, color }) => ({
  withLabel: {
    borderTop: "0 !important"
  },
  left: {
    "&::before": {
      display: "none"
    }
  },
  right: {
    "&::after": {
      display: "none"
    }
  },
  label: {
    display: "flex",
    alignItems: "center",
    color: color === "dark" ? theme.colors.dark[1] : styles.getThemeColor({ theme, color, shade: 6 }),
    "&::before": {
      content: '""',
      flex: 1,
      height: 1,
      borderTop: `1px ${variant} ${styles.getThemeColor({
        theme,
        color,
        shade: theme.colorScheme === "dark" ? 3 : 4
      })}`,
      marginRight: theme.spacing.xs
    },
    "&::after": {
      content: '""',
      flex: 1,
      borderTop: `1px ${variant} ${styles.getThemeColor({
        theme,
        color,
        shade: theme.colorScheme === "dark" ? 3 : 4
      })}`,
      marginLeft: theme.spacing.xs
    }
  },
  horizontal: {
    border: 0,
    borderTopWidth: styles.getSizeValue({ size, sizes }),
    borderTopColor: styles.getThemeColor({ theme, color, shade: theme.colorScheme === "dark" ? 3 : 4 }),
    borderTopStyle: variant,
    margin: 0
  },
  vertical: {
    border: 0,
    alignSelf: "stretch",
    borderLeftWidth: styles.getSizeValue({ size, sizes }),
    borderLeftColor: styles.getThemeColor({ theme, color, shade: 4 }),
    borderLeftStyle: variant
  }
}));

exports.default = useStyles;
exports.sizes = sizes;
//# sourceMappingURL=Divider.styles.js.map
