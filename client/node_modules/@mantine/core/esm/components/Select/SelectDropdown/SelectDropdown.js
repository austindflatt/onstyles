import React, { forwardRef } from 'react';
import useStyles from './SelectDropdown.styles.js';
import { Transition } from '../../Transition/Transition.js';
import { Paper } from '../../Paper/Paper.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const SelectDropdown = forwardRef(({
  mounted,
  transition,
  transitionDuration,
  transitionTimingFunction,
  uuid,
  shadow,
  maxDropdownHeight,
  children,
  classNames,
  styles,
  dropdownComponent,
  __staticSelector
}, ref) => {
  const { classes } = useStyles(null, { classNames, styles, name: __staticSelector });
  return /* @__PURE__ */ React.createElement(Transition, {
    mounted,
    transition,
    duration: transitionDuration,
    timingFunction: transitionTimingFunction
  }, (transitionStyles) => /* @__PURE__ */ React.createElement("div", {
    style: { position: "relative" }
  }, /* @__PURE__ */ React.createElement(Paper, {
    component: dropdownComponent || "div",
    id: `${uuid}-items`,
    "aria-labelledby": `${uuid}-label`,
    role: "listbox",
    className: classes.dropdown,
    shadow,
    ref,
    style: __spreadProps(__spreadValues({}, transitionStyles), { maxHeight: maxDropdownHeight }),
    onMouseDown: (event) => event.preventDefault()
  }, children)));
});
SelectDropdown.displayName = "@mantine/core/SelectDropdown";

export { SelectDropdown };
//# sourceMappingURL=SelectDropdown.js.map
