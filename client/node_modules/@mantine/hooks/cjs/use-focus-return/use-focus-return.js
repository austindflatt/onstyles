'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');
var useDidUpdate = require('../use-did-update/use-did-update.js');

function useFocusReturn({ opened, transitionDuration }) {
  const returnFocus = react.useRef();
  useDidUpdate.useDidUpdate(() => {
    let timeout = -1;
    const clearFocusTimeout = (event) => {
      if (event.code === "Tab") {
        window.clearTimeout(timeout);
      }
    };
    document.addEventListener("keydown", clearFocusTimeout);
    if (opened) {
      returnFocus.current = document.activeElement;
    } else {
      timeout = window.setTimeout(() => {
        var _a;
        if (returnFocus.current && "focus" in returnFocus.current && typeof returnFocus.current.focus === "function") {
          (_a = returnFocus.current) == null ? void 0 : _a.focus();
        }
      }, transitionDuration + 10);
    }
    return () => {
      window.clearTimeout(timeout);
      document.removeEventListener("keydown", clearFocusTimeout);
    };
  }, [opened]);
}

exports.useFocusReturn = useFocusReturn;
//# sourceMappingURL=use-focus-return.js.map
