import React, { createContext, useContext } from 'react';
import { DEFAULT_THEME } from './default-theme.js';
import { mergeTheme } from './utils/merge-theme/merge-theme.js';

const MantineThemeContext = createContext({
  theme: DEFAULT_THEME,
  styles: {},
  emotionOptions: { key: "mantine", prepend: true }
});
function useMantineTheme() {
  var _a;
  return ((_a = useContext(MantineThemeContext)) == null ? void 0 : _a.theme) || DEFAULT_THEME;
}
function useMantineThemeStyles() {
  var _a;
  return ((_a = useContext(MantineThemeContext)) == null ? void 0 : _a.styles) || {};
}
function useMantineEmotionOptions() {
  var _a;
  return ((_a = useContext(MantineThemeContext)) == null ? void 0 : _a.emotionOptions) || { key: "mantine", prepend: true };
}
function MantineProvider({
  theme,
  styles = {},
  emotionOptions,
  children
}) {
  return /* @__PURE__ */ React.createElement(MantineThemeContext.Provider, {
    value: { theme: mergeTheme(DEFAULT_THEME, theme), styles, emotionOptions }
  }, children);
}
MantineProvider.displayName = "@mantine/core/MantineProvider";

export { MantineProvider, useMantineEmotionOptions, useMantineTheme, useMantineThemeStyles };
//# sourceMappingURL=MantineProvider.js.map
