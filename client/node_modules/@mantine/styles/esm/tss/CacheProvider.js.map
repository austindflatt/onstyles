{"version":3,"file":"CacheProvider.js","sources":["../../src/tss/CacheProvider.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\nimport createCache, { EmotionCache, Options } from '@emotion/cache';\nimport { useMantineEmotionOptions } from '../theme/MantineProvider';\n\nexport const { getCache } = (() => {\n  let cache: EmotionCache;\n\n  function _getCache(options?: Options) {\n    if (cache === undefined) {\n      cache = createCache(options || { key: 'mantine', prepend: true });\n    }\n\n    return cache;\n  }\n\n  return { getCache: _getCache };\n})();\n\nconst context = createContext<EmotionCache>(undefined);\n\nexport function useCache() {\n  const options = useMantineEmotionOptions();\n  return useContext(context) || getCache(options);\n}\n\ninterface CacheProviderProps {\n  value: EmotionCache;\n  children: React.ReactNode;\n}\n\nexport function CacheProvider({ children, value }: CacheProviderProps) {\n  return <context.Provider value={value}>{children}</context.Provider>;\n}\n"],"names":[],"mappings":";;;;AAGY,MAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,MAAM;AACnC,EAAE,IAAI,KAAK,CAAC;AACZ,EAAE,SAAS,SAAS,CAAC,OAAO,EAAE;AAC9B,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AAC1B,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;AACxE,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;AACjC,CAAC,IAAI;AACL,MAAM,OAAO,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/B,SAAS,QAAQ,GAAG;AAC3B,EAAE,MAAM,OAAO,GAAG,wBAAwB,EAAE,CAAC;AAC7C,EAAE,OAAO,UAAU,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;AAClD;;;;"}