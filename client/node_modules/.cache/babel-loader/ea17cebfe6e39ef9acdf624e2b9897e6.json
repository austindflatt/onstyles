{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useExtractedMargins } from '@mantine/styles';\nimport { Text } from '../Text/Text.js';\nimport useStyles from './Breadcrumbs.styles.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst Breadcrumbs = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    className,\n    style,\n    children,\n    separator = \"/\",\n    classNames,\n    styles,\n    sx\n  } = _b,\n      others = __objRest(_b, [\"className\", \"style\", \"children\", \"separator\", \"classNames\", \"styles\", \"sx\"]);\n\n  const {\n    classes,\n    cx\n  } = useStyles(null, {\n    classNames,\n    styles,\n    sx,\n    name: \"Breadcrumbs\"\n  });\n  const {\n    mergedStyles,\n    rest\n  } = useExtractedMargins({\n    others,\n    style\n  });\n  const items = React.Children.toArray(children).reduce((acc, child, index, array) => {\n    acc.push(React.cloneElement(child, {\n      className: classes.breadcrumb,\n      key: index\n    }));\n\n    if (index !== array.length - 1) {\n      acc.push( /* @__PURE__ */React.createElement(Text, {\n        size: \"sm\",\n        className: classes.separator,\n        key: `separator-${index}`\n      }, separator));\n    }\n\n    return acc;\n  }, []);\n  return /* @__PURE__ */React.createElement(\"div\", __spreadValues({\n    className: cx(classes.root, className),\n    style: mergedStyles,\n    ref\n  }, rest), items);\n});\nBreadcrumbs.displayName = \"@mantine/core/Breadcrumbs\";\nexport { Breadcrumbs };","map":{"version":3,"sources":["../../../src/components/Breadcrumbs/Breadcrumbs.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { DefaultProps, ClassNames, useExtractedMargins } from '@mantine/styles';\nimport { Text } from '../Text/Text';\nimport useStyles from './Breadcrumbs.styles';\n\nexport type BreadcrumbsStylesNames = ClassNames<typeof useStyles>;\n\nexport interface BreadcrumbsProps\n  extends DefaultProps<BreadcrumbsStylesNames>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Separator between breadcrumbs */\n  separator?: React.ReactNode;\n\n  /** React nodes that should be separated */\n  children: React.ReactNode;\n}\n\nexport const Breadcrumbs = forwardRef<HTMLDivElement, BreadcrumbsProps>(\n  (\n    {\n      className,\n      style,\n      children,\n      separator = '/',\n      classNames,\n      styles,\n      sx,\n      ...others\n    }: BreadcrumbsProps,\n    ref\n  ) => {\n    const { classes, cx } = useStyles(null, { classNames, styles, sx, name: 'Breadcrumbs' });\n    const { mergedStyles, rest } = useExtractedMargins({ others, style });\n\n    const items = React.Children.toArray(children).reduce(\n      (acc: any[], child: any, index, array) => {\n        acc.push(React.cloneElement(child, { className: classes.breadcrumb, key: index }));\n\n        if (index !== array.length - 1) {\n          acc.push(\n            <Text size=\"sm\" className={classes.separator} key={`separator-${index}`}>\n              {separator}\n            </Text>\n          );\n        }\n\n        return acc;\n      },\n      []\n    );\n\n    return (\n      <div className={cx(classes.root, className)} style={mergedStyles} ref={ref} {...rest}>\n        {items}\n      </div>\n    );\n  }\n);\n\nBreadcrumbs.displayName = '@mantine/core/Breadcrumbs';\n"]},"metadata":{},"sourceType":"module"}