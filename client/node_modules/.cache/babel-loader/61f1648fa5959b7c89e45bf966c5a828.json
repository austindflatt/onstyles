{"ast":null,"code":"import { createStyles, getSizeValue } from '@mantine/styles';\nvar useStyles = createStyles((theme, {\n  size\n}) => {\n  const spacing = getSizeValue({\n    size,\n    sizes: theme.spacing\n  });\n  return {\n    wrapper: {\n      position: \"relative\"\n    },\n    item: {\n      textAlign: \"left\",\n      width: \"100%\",\n      padding: `${spacing / 1.5}px ${spacing}`,\n      fontSize: getSizeValue({\n        size,\n        sizes: theme.fontSizes\n      }),\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.black\n    },\n    hovered: {\n      backgroundColor: theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[1]\n    },\n    nothingFound: {\n      boxSizing: \"border-box\",\n      color: theme.colors.gray[6],\n      paddingTop: spacing / 2,\n      paddingBottom: spacing / 2,\n      textAlign: \"center\"\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["../../../src/components/Autocomplete/Autocomplete.styles.ts"],"names":[],"mappings":";AACA,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAD,EAAQ;AAAE,EAAA;AAAF,CAAR,KAAqB;AAC/C,QAAM,OAAO,GAAG,YAAY,CAAC;AAAE,IAAA,IAAF;AAAQ,IAAA,KAAK,EAAE,KAAK,CAAC;AAArB,GAAD,CAA5B;AACA,SAAO;AACL,IAAA,OAAO,EAAE;AACP,MAAA,QAAQ,EAAE;AADH,KADJ;AAIL,IAAA,IAAI,EAAE;AACJ,MAAA,SAAS,EAAE,MADP;AAEJ,MAAA,KAAK,EAAE,MAFH;AAGJ,MAAA,OAAO,EAAG,GAAE,OAAO,GAAG,GAAI,MAAK,OAAQ,EAHnC;AAIJ,MAAA,QAAQ,EAAE,YAAY,CAAC;AAAE,QAAA,IAAF;AAAQ,QAAA,KAAK,EAAE,KAAK,CAAC;AAArB,OAAD,CAJlB;AAKJ,MAAA,KAAK,EAAE,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAA/B,GAAsD,KAAK,CAAC;AAL/D,KAJD;AAWL,IAAA,OAAO,EAAE;AACP,MAAA,eAAe,EAAE,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAA/B,GAAsD,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB;AADhE,KAXJ;AAcL,IAAA,YAAY,EAAE;AACZ,MAAA,SAAS,EAAE,YADC;AAEZ,MAAA,KAAK,EAAE,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAFK;AAGZ,MAAA,UAAU,EAAE,OAAO,GAAG,CAHV;AAIZ,MAAA,aAAa,EAAE,OAAO,GAAG,CAJb;AAKZ,MAAA,SAAS,EAAE;AALC;AAdT,GAAP;AAsBD,CAxB0B,CAA3B","sourcesContent":["import { createStyles, getSizeValue, MantineSize } from '@mantine/styles';\n\ninterface AutocompleteStyles {\n  size: MantineSize;\n}\n\nexport default createStyles((theme, { size }: AutocompleteStyles) => {\n  const spacing = getSizeValue({ size, sizes: theme.spacing });\n\n  return {\n    wrapper: {\n      position: 'relative',\n    },\n\n    item: {\n      textAlign: 'left',\n      width: '100%',\n      padding: `${spacing / 1.5}px ${spacing}`,\n      fontSize: getSizeValue({ size, sizes: theme.fontSizes }),\n      color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.black,\n    },\n\n    hovered: {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[1],\n    },\n\n    nothingFound: {\n      boxSizing: 'border-box',\n      color: theme.colors.gray[6],\n      paddingTop: spacing / 2,\n      paddingBottom: spacing / 2,\n      textAlign: 'center',\n    },\n  };\n});\n"]},"metadata":{},"sourceType":"module"}