{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useExtractedMargins } from '@mantine/styles';\nimport { Text } from '../Text/Text.js';\nimport { Loader } from '../Loader/Loader.js';\nimport { CloseButton } from '../ActionIcon/CloseButton/CloseButton.js';\nimport useStyles from './Notification.styles.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst Notification = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    className,\n    style,\n    color = \"blue\",\n    loading = false,\n    disallowClose = false,\n    title,\n    icon,\n    children,\n    onClose,\n    closeButtonProps,\n    classNames,\n    styles,\n    sx\n  } = _b,\n      others = __objRest(_b, [\"className\", \"style\", \"color\", \"loading\", \"disallowClose\", \"title\", \"icon\", \"children\", \"onClose\", \"closeButtonProps\", \"classNames\", \"styles\", \"sx\"]);\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color,\n    disallowClose\n  }, {\n    sx,\n    classNames,\n    styles,\n    name: \"Notification\"\n  });\n  const {\n    mergedStyles,\n    rest\n  } = useExtractedMargins({\n    others,\n    style\n  });\n  const withIcon = icon || loading;\n  return /* @__PURE__ */React.createElement(\"div\", __spreadValues({\n    className: cx(classes.root, {\n      [classes.withIcon]: withIcon\n    }, className),\n    role: \"alert\",\n    style: mergedStyles,\n    ref\n  }, rest), icon && !loading && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.icon\n  }, icon), loading && /* @__PURE__ */React.createElement(Loader, {\n    size: 28,\n    color,\n    className: classes.loader\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.body\n  }, title && /* @__PURE__ */React.createElement(Text, {\n    className: classes.title,\n    size: \"sm\",\n    weight: 500\n  }, title), /* @__PURE__ */React.createElement(Text, {\n    color: \"dimmed\",\n    className: classes.description,\n    size: \"sm\"\n  }, children)), !disallowClose && /* @__PURE__ */React.createElement(CloseButton, __spreadProps(__spreadValues({}, closeButtonProps), {\n    iconSize: 16,\n    color: \"gray\",\n    onClick: onClose,\n    variant: \"hover\"\n  })));\n});\nNotification.displayName = \"@mantine/core/Notification\";\nexport { Notification };","map":{"version":3,"sources":["../../../src/components/Notification/Notification.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { DefaultProps, MantineColor, ClassNames, useExtractedMargins } from '@mantine/styles';\nimport { Text } from '../Text/Text';\nimport { Loader } from '../Loader/Loader';\nimport { CloseButton } from '../ActionIcon/CloseButton/CloseButton';\nimport useStyles from './Notification.styles';\n\nexport type NotificationStylesNames = Exclude<ClassNames<typeof useStyles>, 'withIcon'>;\n\nexport interface NotificationProps\n  extends DefaultProps<NotificationStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'title'> {\n  /** Called when close button is clicked */\n  onClose(): void;\n\n  /** Notification line or icon color */\n  color?: MantineColor;\n\n  /** Notification icon, replaces color line */\n  icon?: React.ReactNode;\n\n  /** Notification title, displayed before body */\n  title?: React.ReactNode;\n\n  /** Notification body, place main text here */\n  children?: React.ReactNode;\n\n  /** Replaces colored line or icon with Loader component */\n  loading?: boolean;\n\n  /** Removes close button */\n  disallowClose?: boolean;\n\n  /** Props spread to close button */\n  closeButtonProps?: React.ComponentPropsWithoutRef<'button'> & { [key: string]: any };\n}\n\nexport const Notification = forwardRef<HTMLDivElement, NotificationProps>(\n  (\n    {\n      className,\n      style,\n      color = 'blue',\n      loading = false,\n      disallowClose = false,\n      title,\n      icon,\n      children,\n      onClose,\n      closeButtonProps,\n      classNames,\n      styles,\n      sx,\n      ...others\n    }: NotificationProps,\n    ref\n  ) => {\n    const { classes, cx } = useStyles(\n      { color, disallowClose },\n      { sx, classNames, styles, name: 'Notification' }\n    );\n    const { mergedStyles, rest } = useExtractedMargins({ others, style });\n    const withIcon = icon || loading;\n\n    return (\n      <div\n        className={cx(classes.root, { [classes.withIcon]: withIcon }, className)}\n        role=\"alert\"\n        style={mergedStyles}\n        ref={ref}\n        {...rest}\n      >\n        {icon && !loading && <div className={classes.icon}>{icon}</div>}\n\n        {loading && <Loader size={28} color={color} className={classes.loader} />}\n\n        <div className={classes.body}>\n          {title && (\n            <Text className={classes.title} size=\"sm\" weight={500}>\n              {title}\n            </Text>\n          )}\n\n          <Text color=\"dimmed\" className={classes.description} size=\"sm\">\n            {children}\n          </Text>\n        </div>\n\n        {!disallowClose && (\n          <CloseButton\n            {...closeButtonProps}\n            iconSize={16}\n            color=\"gray\"\n            onClick={onClose}\n            variant=\"hover\"\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nNotification.displayName = '@mantine/core/Notification';\n"]},"metadata":{},"sourceType":"module"}