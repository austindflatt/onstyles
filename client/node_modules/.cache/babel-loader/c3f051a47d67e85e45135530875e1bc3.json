{"ast":null,"code":"import React, { forwardRef, Children, cloneElement } from 'react';\nimport { useUuid, useUncontrolled } from '@mantine/hooks';\nimport { InputWrapper } from '../InputWrapper/InputWrapper.js';\nimport { Radio } from './Radio/Radio.js';\nimport { Group } from '../Group/Group.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst RadioGroup = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    className,\n    name,\n    children,\n    value,\n    defaultValue,\n    onChange,\n    variant = \"horizontal\",\n    spacing = \"sm\",\n    color,\n    size,\n    classNames,\n    styles,\n    sx\n  } = _b,\n      others = __objRest(_b, [\"className\", \"name\", \"children\", \"value\", \"defaultValue\", \"onChange\", \"variant\", \"spacing\", \"color\", \"size\", \"classNames\", \"styles\", \"sx\"]);\n\n  const uuid = useUuid(name);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: \"\",\n    onChange,\n    rule: val => typeof val === \"string\"\n  });\n  const radios = Children.toArray(children).filter(item => item.type === Radio).map((radio, index) => cloneElement(radio, {\n    key: index,\n    checked: _value === radio.props.value,\n    name: uuid,\n    color,\n    size,\n    classNames,\n    styles,\n    onChange: event => setValue(event.currentTarget.value)\n  }));\n  return /* @__PURE__ */React.createElement(InputWrapper, __spreadValues({\n    labelElement: \"div\",\n    size,\n    __staticSelector: \"RadioGroup\",\n    classNames,\n    styles,\n    ref,\n    sx\n  }, others), /* @__PURE__ */React.createElement(Group, {\n    role: \"radiogroup\",\n    spacing,\n    direction: variant === \"horizontal\" ? \"row\" : \"column\",\n    style: {\n      paddingTop: 5\n    }\n  }, radios));\n});\nRadioGroup.displayName = \"@mantine/core/RadioGroup\";\nexport { RadioGroup };","map":{"version":3,"sources":["../../../src/components/RadioGroup/RadioGroup.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Children, cloneElement, forwardRef } from 'react';\nimport { useUncontrolled, useUuid } from '@mantine/hooks';\nimport { DefaultProps, MantineNumberSize, MantineSize, MantineColor } from '@mantine/styles';\nimport {\n  InputWrapper,\n  InputWrapperBaseProps,\n  InputWrapperStylesNames,\n} from '../InputWrapper/InputWrapper';\nimport { Radio, RadioStylesNames } from './Radio/Radio';\nimport { Group } from '../Group/Group';\n\nexport type RadioGroupStylesNames = InputWrapperStylesNames | RadioStylesNames;\n\nexport interface RadioGroupProps\n  extends DefaultProps<RadioGroupStylesNames>,\n    InputWrapperBaseProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'onChange'> {\n  /** <Radio /> components only */\n  children: React.ReactNode;\n\n  /** Input name attribute, used to bind radios in one group, by default generated randomly with use-id hook */\n  name?: string;\n\n  /** Value of currently selected radio */\n  value?: string;\n\n  /** Called when value changes */\n  onChange?(value: string): void;\n\n  /** Initial value for uncontrolled component */\n  defaultValue?: string;\n\n  /** Radios position */\n  variant?: 'horizontal' | 'vertical';\n\n  /** Spacing between radios in horizontal variant */\n  spacing?: MantineNumberSize;\n\n  /** Active radio color from theme.colors */\n  color?: MantineColor;\n\n  /** Predefined label fontSize, radio width, height and border-radius */\n  size?: MantineSize;\n}\n\nexport const RadioGroup = forwardRef<HTMLDivElement, RadioGroupProps>(\n  (\n    {\n      className,\n      name,\n      children,\n      value,\n      defaultValue,\n      onChange,\n      variant = 'horizontal',\n      spacing = 'sm',\n      color,\n      size,\n      classNames,\n      styles,\n      sx,\n      ...others\n    }: RadioGroupProps,\n    ref\n  ) => {\n    const uuid = useUuid(name);\n    const [_value, setValue] = useUncontrolled({\n      value,\n      defaultValue,\n      finalValue: '',\n      onChange,\n      rule: (val) => typeof val === 'string',\n    });\n\n    const radios: any = (Children.toArray(children) as React.ReactElement[])\n      .filter((item) => item.type === Radio)\n      .map((radio, index) =>\n        cloneElement(radio, {\n          key: index,\n          checked: _value === radio.props.value,\n          name: uuid,\n          color,\n          size,\n          classNames,\n          styles,\n          onChange: (event: React.ChangeEvent<HTMLInputElement>) =>\n            setValue(event.currentTarget.value),\n        })\n      );\n\n    return (\n      <InputWrapper\n        labelElement=\"div\"\n        size={size}\n        __staticSelector=\"RadioGroup\"\n        classNames={classNames}\n        styles={styles}\n        ref={ref}\n        sx={sx}\n        {...others}\n      >\n        <Group\n          role=\"radiogroup\"\n          spacing={spacing}\n          direction={variant === 'horizontal' ? 'row' : 'column'}\n          style={{ paddingTop: 5 }}\n        >\n          {radios}\n        </Group>\n      </InputWrapper>\n    );\n  }\n);\n\nRadioGroup.displayName = '@mantine/core/RadioGroup';\n"]},"metadata":{},"sourceType":"module"}