{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { useUuid } from '@mantine/hooks';\nimport { useExtractedMargins } from '@mantine/styles';\nimport { InputWrapper } from '../InputWrapper/InputWrapper.js';\nimport { Input } from '../Input/Input.js';\nimport useStyles from './Textarea.styles.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst Textarea = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    autosize = false,\n    maxRows,\n    minRows,\n    label,\n    error,\n    description,\n    id,\n    className,\n    required,\n    style,\n    wrapperProps,\n    classNames,\n    styles,\n    size = \"sm\",\n    __staticSelector = \"Textarea\",\n    sx\n  } = _b,\n      others = __objRest(_b, [\"autosize\", \"maxRows\", \"minRows\", \"label\", \"error\", \"description\", \"id\", \"className\", \"required\", \"style\", \"wrapperProps\", \"classNames\", \"styles\", \"size\", \"__staticSelector\", \"sx\"]);\n\n  const uuid = useUuid(id);\n  const {\n    classes,\n    cx\n  } = useStyles();\n  const {\n    mergedStyles,\n    rest\n  } = useExtractedMargins({\n    others,\n    style\n  });\n\n  const _classNames = __spreadProps(__spreadValues({}, classNames), {\n    input: cx(classes.input, classNames == null ? void 0 : classNames.input)\n  });\n\n  return /* @__PURE__ */React.createElement(InputWrapper, __spreadValues({\n    label,\n    error,\n    id: uuid,\n    description,\n    required,\n    style: mergedStyles,\n    className,\n    classNames,\n    styles,\n    size,\n    __staticSelector,\n    sx\n  }, wrapperProps), autosize ? /* @__PURE__ */React.createElement(Input, __spreadValues({\n    required,\n    component: TextareaAutosize,\n    invalid: !!error,\n    maxRows,\n    minRows,\n    id: uuid,\n    ref,\n    classNames: _classNames,\n    styles,\n    size,\n    multiline: true\n  }, rest)) : /* @__PURE__ */React.createElement(Input, __spreadValues({\n    component: \"textarea\",\n    required,\n    id: uuid,\n    invalid: !!error,\n    rows: minRows,\n    ref,\n    classNames: _classNames,\n    styles,\n    size,\n    __staticSelector,\n    multiline: true\n  }, rest)));\n});\nTextarea.displayName = \"@mantine/core/Textarea\";\nexport { Textarea };","map":{"version":3,"sources":["../../../src/components/Textarea/Textarea.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { useUuid } from '@mantine/hooks';\nimport { DefaultProps, MantineSize, useExtractedMargins } from '@mantine/styles';\nimport { InputWrapperBaseProps, InputWrapper } from '../InputWrapper/InputWrapper';\nimport { TextInputStylesNames } from '../TextInput/TextInput';\nimport { Input, InputBaseProps } from '../Input/Input';\nimport useStyles from './Textarea.styles';\n\nexport interface TextareaProps\n  extends DefaultProps<TextInputStylesNames>,\n    InputWrapperBaseProps,\n    InputBaseProps,\n    React.ComponentPropsWithoutRef<'textarea'> {\n  /** Id is used to bind input and label, if not passed unique id will be generated for each input */\n  id?: string;\n\n  /** If true textarea will grow with content until maxRows are reached  */\n  autosize?: boolean;\n\n  /** Defines maxRows in autosize variant, not applicable to regular variant */\n  maxRows?: number;\n\n  /** Defined minRows in autosize variant and rows in regular variant */\n  minRows?: number;\n\n  /** Props passed to root element (InputWrapper component) */\n  wrapperProps?: React.ComponentPropsWithoutRef<'div'> & { [key: string]: any };\n\n  /** Input size */\n  size?: MantineSize;\n\n  /** Static selectors base */\n  __staticSelector?: string;\n}\n\nexport const Textarea = forwardRef<HTMLTextAreaElement, TextareaProps>(\n  (\n    {\n      autosize = false,\n      maxRows,\n      minRows,\n      label,\n      error,\n      description,\n      id,\n      className,\n      required,\n      style,\n      wrapperProps,\n      classNames,\n      styles,\n      size = 'sm',\n      __staticSelector = 'Textarea',\n      sx,\n      ...others\n    }: TextareaProps,\n    ref\n  ) => {\n    const uuid = useUuid(id);\n    const { classes, cx } = useStyles();\n    const { mergedStyles, rest } = useExtractedMargins({ others, style });\n    const _classNames = { ...classNames, input: cx(classes.input, classNames?.input) };\n\n    return (\n      <InputWrapper\n        label={label}\n        error={error}\n        id={uuid}\n        description={description}\n        required={required}\n        style={mergedStyles}\n        className={className}\n        classNames={classNames}\n        styles={styles}\n        size={size}\n        __staticSelector={__staticSelector}\n        sx={sx}\n        {...wrapperProps}\n      >\n        {autosize ? (\n          <Input<typeof TextareaAutosize>\n            required={required}\n            component={TextareaAutosize}\n            invalid={!!error}\n            maxRows={maxRows}\n            minRows={minRows}\n            id={uuid}\n            ref={ref}\n            classNames={_classNames}\n            styles={styles}\n            size={size}\n            multiline\n            {...rest}\n          />\n        ) : (\n          <Input<'textarea'>\n            component=\"textarea\"\n            required={required}\n            id={uuid}\n            invalid={!!error}\n            rows={minRows}\n            ref={ref}\n            classNames={_classNames}\n            styles={styles}\n            size={size}\n            __staticSelector={__staticSelector}\n            multiline\n            {...rest}\n          />\n        )}\n      </InputWrapper>\n    );\n  }\n);\n\nTextarea.displayName = '@mantine/core/Textarea';\n"]},"metadata":{},"sourceType":"module"}