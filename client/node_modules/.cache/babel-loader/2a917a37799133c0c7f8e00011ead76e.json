{"ast":null,"code":"import { createStyles, getThemeColor, getSizeValue } from '@mantine/styles';\nconst sizes = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 4,\n  xl: 5\n};\nvar useStyles = createStyles((theme, {\n  size,\n  variant,\n  color\n}) => ({\n  withLabel: {\n    borderTop: \"0 !important\"\n  },\n  left: {\n    \"&::before\": {\n      display: \"none\"\n    }\n  },\n  right: {\n    \"&::after\": {\n      display: \"none\"\n    }\n  },\n  label: {\n    display: \"flex\",\n    alignItems: \"center\",\n    color: color === \"dark\" ? theme.colors.dark[1] : getThemeColor({\n      theme,\n      color,\n      shade: 6\n    }),\n    \"&::before\": {\n      content: '\"\"',\n      flex: 1,\n      height: 1,\n      borderTop: `1px ${variant} ${getThemeColor({\n        theme,\n        color,\n        shade: theme.colorScheme === \"dark\" ? 3 : 4\n      })}`,\n      marginRight: theme.spacing.xs\n    },\n    \"&::after\": {\n      content: '\"\"',\n      flex: 1,\n      borderTop: `1px ${variant} ${getThemeColor({\n        theme,\n        color,\n        shade: theme.colorScheme === \"dark\" ? 3 : 4\n      })}`,\n      marginLeft: theme.spacing.xs\n    }\n  },\n  horizontal: {\n    border: 0,\n    borderTopWidth: getSizeValue({\n      size,\n      sizes\n    }),\n    borderTopColor: getThemeColor({\n      theme,\n      color,\n      shade: theme.colorScheme === \"dark\" ? 3 : 4\n    }),\n    borderTopStyle: variant,\n    margin: 0\n  },\n  vertical: {\n    border: 0,\n    alignSelf: \"stretch\",\n    borderLeftWidth: getSizeValue({\n      size,\n      sizes\n    }),\n    borderLeftColor: getThemeColor({\n      theme,\n      color,\n      shade: 4\n    }),\n    borderLeftStyle: variant\n  }\n}));\nexport default useStyles;\nexport { sizes };","map":{"version":3,"sources":["../../../src/components/Divider/Divider.styles.ts"],"names":[],"mappings":";AAKY,MAAC,KAAK,GAAG;AACnB,EAAA,EAAE,EAAE,CADe;AAEnB,EAAA,EAAE,EAAE,CAFe;AAGnB,EAAA,EAAE,EAAE,CAHe;AAInB,EAAA,EAAE,EAAE,CAJe;AAKnB,EAAA,EAAE,EAAE;AALe,CAAT;AAOZ,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAD,EAAQ;AAAE,EAAA,IAAF;AAAQ,EAAA,OAAR;AAAiB,EAAA;AAAjB,CAAR,MAAsC;AAChE,EAAA,SAAS,EAAE;AACT,IAAA,SAAS,EAAE;AADF,GADqD;AAIhE,EAAA,IAAI,EAAE;AACJ,iBAAa;AACX,MAAA,OAAO,EAAE;AADE;AADT,GAJ0D;AAShE,EAAA,KAAK,EAAE;AACL,gBAAY;AACV,MAAA,OAAO,EAAE;AADC;AADP,GATyD;AAchE,EAAA,KAAK,EAAE;AACL,IAAA,OAAO,EAAE,MADJ;AAEL,IAAA,UAAU,EAAE,QAFP;AAGL,IAAA,KAAK,EAAE,KAAK,KAAK,MAAV,GAAmB,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAAnB,GAA0C,aAAa,CAAC;AAAE,MAAA,KAAF;AAAS,MAAA,KAAT;AAAgB,MAAA,KAAK,EAAE;AAAvB,KAAD,CAHzD;AAIL,iBAAa;AACX,MAAA,OAAO,EAAE,IADE;AAEX,MAAA,IAAI,EAAE,CAFK;AAGX,MAAA,MAAM,EAAE,CAHG;AAIX,MAAA,SAAS,EAAG,OAAM,OAAQ,IAAG,aAAa,CAAC;AACzC,QAAA,KADyC;AAEzC,QAAA,KAFyC;AAGzC,QAAA,KAAK,EAAE,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,CAA/B,GAAmC;AAHD,OAAD,CAIvC,EARQ;AASX,MAAA,WAAW,EAAE,KAAK,CAAC,OAAN,CAAc;AAThB,KAJR;AAeL,gBAAY;AACV,MAAA,OAAO,EAAE,IADC;AAEV,MAAA,IAAI,EAAE,CAFI;AAGV,MAAA,SAAS,EAAG,OAAM,OAAQ,IAAG,aAAa,CAAC;AACzC,QAAA,KADyC;AAEzC,QAAA,KAFyC;AAGzC,QAAA,KAAK,EAAE,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,CAA/B,GAAmC;AAHD,OAAD,CAIvC,EAPO;AAQV,MAAA,UAAU,EAAE,KAAK,CAAC,OAAN,CAAc;AARhB;AAfP,GAdyD;AAwChE,EAAA,UAAU,EAAE;AACV,IAAA,MAAM,EAAE,CADE;AAEV,IAAA,cAAc,EAAE,YAAY,CAAC;AAAE,MAAA,IAAF;AAAQ,MAAA;AAAR,KAAD,CAFlB;AAGV,IAAA,cAAc,EAAE,aAAa,CAAC;AAAE,MAAA,KAAF;AAAS,MAAA,KAAT;AAAgB,MAAA,KAAK,EAAE,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,CAA/B,GAAmC;AAA1D,KAAD,CAHnB;AAIV,IAAA,cAAc,EAAE,OAJN;AAKV,IAAA,MAAM,EAAE;AALE,GAxCoD;AA+ChE,EAAA,QAAQ,EAAE;AACR,IAAA,MAAM,EAAE,CADA;AAER,IAAA,SAAS,EAAE,SAFH;AAGR,IAAA,eAAe,EAAE,YAAY,CAAC;AAAE,MAAA,IAAF;AAAQ,MAAA;AAAR,KAAD,CAHrB;AAIR,IAAA,eAAe,EAAE,aAAa,CAAC;AAAE,MAAA,KAAF;AAAS,MAAA,KAAT;AAAgB,MAAA,KAAK,EAAE;AAAvB,KAAD,CAJtB;AAKR,IAAA,eAAe,EAAE;AALT;AA/CsD,CAAtC,CAAD,CAA3B","sourcesContent":["import {\n  createStyles,\n  MantineNumberSize,\n  getSizeValue,\n  getThemeColor,\n  MantineColor,\n} from '@mantine/styles';\n\ninterface DividerStyles {\n  size: MantineNumberSize;\n  variant: string;\n  color: MantineColor;\n}\n\nexport const sizes = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 4,\n  xl: 5,\n};\n\nexport default createStyles((theme, { size, variant, color }: DividerStyles) => ({\n  withLabel: {\n    borderTop: '0 !important',\n  },\n\n  left: {\n    '&::before': {\n      display: 'none',\n    },\n  },\n\n  right: {\n    '&::after': {\n      display: 'none',\n    },\n  },\n\n  label: {\n    display: 'flex',\n    alignItems: 'center',\n    color: color === 'dark' ? theme.colors.dark[1] : getThemeColor({ theme, color, shade: 6 }),\n\n    '&::before': {\n      content: '\"\"',\n      flex: 1,\n      height: 1,\n      borderTop: `1px ${variant} ${getThemeColor({\n        theme,\n        color,\n        shade: theme.colorScheme === 'dark' ? 3 : 4,\n      })}`,\n      marginRight: theme.spacing.xs,\n    },\n\n    '&::after': {\n      content: '\"\"',\n      flex: 1,\n      borderTop: `1px ${variant} ${getThemeColor({\n        theme,\n        color,\n        shade: theme.colorScheme === 'dark' ? 3 : 4,\n      })}`,\n      marginLeft: theme.spacing.xs,\n    },\n  },\n\n  horizontal: {\n    border: 0,\n    borderTopWidth: getSizeValue({ size, sizes }),\n    borderTopColor: getThemeColor({ theme, color, shade: theme.colorScheme === 'dark' ? 3 : 4 }),\n    borderTopStyle: variant as any,\n    margin: 0,\n  },\n\n  vertical: {\n    border: 0,\n    alignSelf: 'stretch',\n    borderLeftWidth: getSizeValue({ size, sizes }),\n    borderLeftColor: getThemeColor({ theme, color, shade: 4 }),\n    borderLeftStyle: variant as any,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}