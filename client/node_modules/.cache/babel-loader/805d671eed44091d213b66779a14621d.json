{"ast":null,"code":"import { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update.js';\n\nfunction useFocusReturn({\n  opened,\n  transitionDuration\n}) {\n  const returnFocus = useRef();\n  useDidUpdate(() => {\n    let timeout = -1;\n\n    const clearFocusTimeout = event => {\n      if (event.code === \"Tab\") {\n        window.clearTimeout(timeout);\n      }\n    };\n\n    document.addEventListener(\"keydown\", clearFocusTimeout);\n\n    if (opened) {\n      returnFocus.current = document.activeElement;\n    } else {\n      timeout = window.setTimeout(() => {\n        var _a;\n\n        if (returnFocus.current && \"focus\" in returnFocus.current && typeof returnFocus.current.focus === \"function\") {\n          (_a = returnFocus.current) == null ? void 0 : _a.focus();\n        }\n      }, transitionDuration + 10);\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener(\"keydown\", clearFocusTimeout);\n    };\n  }, [opened]);\n}\n\nexport { useFocusReturn };","map":{"version":3,"sources":["../../src/use-focus-return/use-focus-return.ts"],"names":[],"mappings":";;;AAEO,SAAS,cAAT,CAAwB;AAAE,EAAA,MAAF;AAAU,EAAA;AAAV,CAAxB,EAAwD;AAC7D,QAAM,WAAW,GAAG,MAAM,EAA1B;AACA,EAAA,YAAY,CAAC,MAAM;AACjB,QAAI,OAAO,GAAG,CAAC,CAAf;;AACA,UAAM,iBAAiB,GAAI,KAAD,IAAW;AACnC,UAAI,KAAK,CAAC,IAAN,KAAe,KAAnB,EAA0B;AACxB,QAAA,MAAM,CAAC,YAAP,CAAoB,OAApB;AACD;AACF,KAJD;;AAKA,IAAA,QAAQ,CAAC,gBAAT,CAA0B,SAA1B,EAAqC,iBAArC;;AACA,QAAI,MAAJ,EAAY;AACV,MAAA,WAAW,CAAC,OAAZ,GAAsB,QAAQ,CAAC,aAA/B;AACD,KAFD,MAEO;AACL,MAAA,OAAO,GAAG,MAAM,CAAC,UAAP,CAAkB,MAAM;AAChC,YAAI,EAAJ;;AACA,YAAI,WAAW,CAAC,OAAZ,IAAuB,WAAW,WAAW,CAAC,OAA9C,IAAyD,OAAO,WAAW,CAAC,OAAZ,CAAoB,KAA3B,KAAqC,UAAlG,EAA8G;AAC5G,WAAC,EAAE,GAAG,WAAW,CAAC,OAAlB,KAA8B,IAA9B,GAAqC,KAAK,CAA1C,GAA8C,EAAE,CAAC,KAAH,EAA9C;AACD;AACF,OALS,EAKP,kBAAkB,GAAG,EALd,CAAV;AAMD;;AACD,WAAO,MAAM;AACX,MAAA,MAAM,CAAC,YAAP,CAAoB,OAApB;AACA,MAAA,QAAQ,CAAC,mBAAT,CAA6B,SAA7B,EAAwC,iBAAxC;AACD,KAHD;AAID,GAtBW,EAsBT,CAAC,MAAD,CAtBS,CAAZ;AAuBF","sourcesContent":["import { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update';\n\ninterface UseFocusReturn {\n  opened: boolean;\n  transitionDuration: number;\n}\n\n/** Returns focus to last active element, used in Modal and Drawer */\nexport function useFocusReturn({ opened, transitionDuration }: UseFocusReturn) {\n  const returnFocus = useRef<HTMLElement>();\n\n  useDidUpdate(() => {\n    let timeout = -1;\n\n    const clearFocusTimeout = (event: KeyboardEvent) => {\n      if (event.code === 'Tab') {\n        window.clearTimeout(timeout);\n      }\n    };\n\n    document.addEventListener('keydown', clearFocusTimeout);\n\n    if (opened) {\n      returnFocus.current = document.activeElement as HTMLElement;\n    } else {\n      timeout = window.setTimeout(() => {\n        if (\n          returnFocus.current &&\n          'focus' in returnFocus.current &&\n          typeof returnFocus.current.focus === 'function'\n        ) {\n          returnFocus.current?.focus();\n        }\n      }, transitionDuration + 10);\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener('keydown', clearFocusTimeout);\n    };\n  }, [opened]);\n}\n"]},"metadata":{},"sourceType":"module"}