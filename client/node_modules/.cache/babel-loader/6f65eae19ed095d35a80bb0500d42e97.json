{"ast":null,"code":"import React, { createContext, useContext } from 'react';\nimport { DEFAULT_THEME } from './default-theme.js';\nimport { mergeTheme } from './utils/merge-theme/merge-theme.js';\nconst MantineThemeContext = createContext({\n  theme: DEFAULT_THEME,\n  styles: {},\n  emotionOptions: {\n    key: \"mantine\",\n    prepend: true\n  }\n});\n\nfunction useMantineTheme() {\n  var _a;\n\n  return ((_a = useContext(MantineThemeContext)) == null ? void 0 : _a.theme) || DEFAULT_THEME;\n}\n\nfunction useMantineThemeStyles() {\n  var _a;\n\n  return ((_a = useContext(MantineThemeContext)) == null ? void 0 : _a.styles) || {};\n}\n\nfunction useMantineEmotionOptions() {\n  var _a;\n\n  return ((_a = useContext(MantineThemeContext)) == null ? void 0 : _a.emotionOptions) || {\n    key: \"mantine\",\n    prepend: true\n  };\n}\n\nfunction MantineProvider({\n  theme,\n  styles = {},\n  emotionOptions,\n  children\n}) {\n  return /* @__PURE__ */React.createElement(MantineThemeContext.Provider, {\n    value: {\n      theme: mergeTheme(DEFAULT_THEME, theme),\n      styles,\n      emotionOptions\n    }\n  }, children);\n}\n\nMantineProvider.displayName = \"@mantine/core/MantineProvider\";\nexport { MantineProvider, useMantineEmotionOptions, useMantineTheme, useMantineThemeStyles };","map":{"version":3,"sources":["../../src/theme/MantineProvider.tsx"],"names":[],"mappings":";;;AAGA,MAAM,mBAAmB,GAAG,aAAa,CAAC;AACxC,EAAA,KAAK,EAAE,aADiC;AAExC,EAAA,MAAM,EAAE,EAFgC;AAGxC,EAAA,cAAc,EAAE;AAAE,IAAA,GAAG,EAAE,SAAP;AAAkB,IAAA,OAAO,EAAE;AAA3B;AAHwB,CAAD,CAAzC;;AAKO,SAAS,eAAT,GAA2B;AAChC,MAAI,EAAJ;;AACA,SAAO,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC,mBAAD,CAAhB,KAA0C,IAA1C,GAAiD,KAAK,CAAtD,GAA0D,EAAE,CAAC,KAA9D,KAAwE,aAA/E;AACD;;AACM,SAAS,qBAAT,GAAiC;AACtC,MAAI,EAAJ;;AACA,SAAO,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC,mBAAD,CAAhB,KAA0C,IAA1C,GAAiD,KAAK,CAAtD,GAA0D,EAAE,CAAC,MAA9D,KAAyE,EAAhF;AACD;;AACM,SAAS,wBAAT,GAAoC;AACzC,MAAI,EAAJ;;AACA,SAAO,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC,mBAAD,CAAhB,KAA0C,IAA1C,GAAiD,KAAK,CAAtD,GAA0D,EAAE,CAAC,cAA9D,KAAiF;AAAE,IAAA,GAAG,EAAE,SAAP;AAAkB,IAAA,OAAO,EAAE;AAA3B,GAAxF;AACD;;AACM,SAAS,eAAT,CAAyB;AAC9B,EAAA,KAD8B;AAE9B,EAAA,MAAM,GAAG,EAFqB;AAG9B,EAAA,cAH8B;AAI9B,EAAA;AAJ8B,CAAzB,EAKJ;AACD,SAAA,eAAuB,KAAK,CAAC,aAAN,CAAoB,mBAAmB,CAAC,QAAxC,EAAkD;AACvE,IAAA,KAAK,EAAE;AAAE,MAAA,KAAK,EAAE,UAAU,CAAC,aAAD,EAAgB,KAAhB,CAAnB;AAA2C,MAAA,MAA3C;AAAmD,MAAA;AAAnD;AADgE,GAAlD,EAEpB,QAFoB,CAAvB;AAGD;;AACD,eAAe,CAAC,WAAhB,GAA8B,+BAA9B","sourcesContent":["import React, { createContext, useContext } from 'react';\nimport type { Options as EmotionCacheOptions } from '@emotion/cache';\nimport { DEFAULT_THEME } from './default-theme';\nimport type { MantineThemeOverride, MantineTheme } from './types';\nimport type { CSSObject } from '../tss';\nimport { mergeTheme } from './utils/merge-theme/merge-theme';\n\ntype ProviderStyles = Record<\n  string,\n  Record<string, CSSObject> | ((theme: MantineTheme) => Record<string, CSSObject>)\n>;\n\ninterface MantineThemeContextType {\n  theme: MantineTheme;\n  styles: ProviderStyles;\n  emotionOptions: EmotionCacheOptions;\n}\n\nconst MantineThemeContext = createContext<MantineThemeContextType>({\n  theme: DEFAULT_THEME,\n  styles: {},\n  emotionOptions: { key: 'mantine', prepend: true },\n});\n\nexport function useMantineTheme() {\n  return useContext(MantineThemeContext)?.theme || DEFAULT_THEME;\n}\n\nexport function useMantineThemeStyles() {\n  return useContext(MantineThemeContext)?.styles || {};\n}\n\nexport function useMantineEmotionOptions(): EmotionCacheOptions {\n  return useContext(MantineThemeContext)?.emotionOptions || { key: 'mantine', prepend: true };\n}\n\ninterface MantineProviderProps {\n  theme?: MantineThemeOverride;\n  styles?: ProviderStyles;\n  emotionOptions?: EmotionCacheOptions;\n  children: React.ReactNode;\n}\n\nexport function MantineProvider({\n  theme,\n  styles = {},\n  emotionOptions,\n  children,\n}: MantineProviderProps) {\n  return (\n    <MantineThemeContext.Provider\n      value={{ theme: mergeTheme(DEFAULT_THEME, theme), styles, emotionOptions }}\n    >\n      {children}\n    </MantineThemeContext.Provider>\n  );\n}\n\nMantineProvider.displayName = '@mantine/core/MantineProvider';\n"]},"metadata":{},"sourceType":"module"}