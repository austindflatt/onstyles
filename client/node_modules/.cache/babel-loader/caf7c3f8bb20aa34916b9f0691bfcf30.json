{"ast":null,"code":"const MenuItem = _props => null;\n\nMenuItem.displayName = \"@mantine/core/MenuItem\";\nexport { MenuItem };","map":{"version":3,"sources":["../../../../src/components/Menu/MenuItem/MenuItem.tsx"],"names":[],"mappings":"AAAY,MAAC,QAAQ,GAAI,MAAD,IAAY,IAAxB;;AACZ,QAAQ,CAAC,WAAT,GAAuB,wBAAvB","sourcesContent":["import React from 'react';\nimport { DefaultProps, MantineColor, PolymorphicComponentProps } from '@mantine/styles';\nimport type { MenuButtonStylesNames } from '../MenuButton/MenuButton';\n\nexport interface SharedMenuItemProps extends DefaultProps<MenuButtonStylesNames> {\n  /** Item label */\n  children: React.ReactNode;\n\n  /** Icon rendered on the left side of label */\n  icon?: React.ReactNode;\n\n  /** Any color from theme.colors */\n  color?: MantineColor;\n\n  /** Any react node to render on the right side of item, for example, keyboard shortcut or badge */\n  rightSection?: React.ReactNode;\n}\n\nexport type MenuItemProps<C extends React.ElementType> = PolymorphicComponentProps<\n  C,\n  SharedMenuItemProps\n>;\n\nexport type MenuItemComponent = <C extends React.ElementType = 'div'>(\n  props: MenuItemProps<C>\n) => React.ReactElement;\n\nexport interface MenuItemType {\n  type: any;\n  props: MenuItemProps<'button'>;\n  ref?: React.RefObject<HTMLButtonElement> | ((instance: HTMLButtonElement) => void);\n}\n\nexport const MenuItem: MenuItemComponent & { displayName?: string } = ((\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _props: MenuItemProps<'button'>\n) => null) as any;\n\nMenuItem.displayName = '@mantine/core/MenuItem';\n"]},"metadata":{},"sourceType":"module"}