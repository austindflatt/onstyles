{"ast":null,"code":"import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\n\nfunction useLocalStorageValue({\n  key,\n  defaultValue = void 0\n}) {\n  const [value, setValue] = useState(typeof window !== \"undefined\" && \"localStorage\" in window ? window.localStorage.getItem(key) : defaultValue != null ? defaultValue : \"\");\n  const setLocalStorageValue = useCallback(val => {\n    if (typeof val === \"function\") {\n      setValue(current => {\n        const result = val(current);\n        window.localStorage.setItem(key, result);\n        return result;\n      });\n    } else {\n      window.localStorage.setItem(key, val);\n      setValue(val);\n    }\n  }, [key]);\n  useWindowEvent(\"storage\", event => {\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(event.newValue);\n    }\n  });\n  useEffect(() => {\n    if (defaultValue && !value) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n  return [value, setLocalStorageValue];\n}\n\nexport { useLocalStorageValue };","map":{"version":3,"sources":["../../src/use-local-storage-value/use-local-storage-value.ts"],"names":[],"mappings":";;;AAEO,SAAS,oBAAT,CAA8B;AACnC,EAAA,GADmC;AAEnC,EAAA,YAAY,GAAG,KAAK;AAFe,CAA9B,EAGJ;AACD,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAQ,CAAC,OAAO,MAAP,KAAkB,WAAlB,IAAiC,kBAAkB,MAAnD,GAA4D,MAAM,CAAC,YAAP,CAAoB,OAApB,CAA4B,GAA5B,CAA5D,GAA+F,YAAY,IAAI,IAAhB,GAAuB,YAAvB,GAAsC,EAAtI,CAAlC;AACA,QAAM,oBAAoB,GAAG,WAAW,CAAE,GAAD,IAAS;AAChD,QAAI,OAAO,GAAP,KAAe,UAAnB,EAA+B;AAC7B,MAAA,QAAQ,CAAE,OAAD,IAAa;AACpB,cAAM,MAAM,GAAG,GAAG,CAAC,OAAD,CAAlB;AACA,QAAA,MAAM,CAAC,YAAP,CAAoB,OAApB,CAA4B,GAA5B,EAAiC,MAAjC;AACA,eAAO,MAAP;AACD,OAJO,CAAR;AAKD,KAND,MAMO;AACL,MAAA,MAAM,CAAC,YAAP,CAAoB,OAApB,CAA4B,GAA5B,EAAiC,GAAjC;AACA,MAAA,QAAQ,CAAC,GAAD,CAAR;AACD;AACF,GAXuC,EAWrC,CAAC,GAAD,CAXqC,CAAxC;AAYA,EAAA,cAAc,CAAC,SAAD,EAAa,KAAD,IAAW;AACnC,QAAI,KAAK,CAAC,WAAN,KAAsB,MAAM,CAAC,YAA7B,IAA6C,KAAK,CAAC,GAAN,KAAc,GAA/D,EAAoE;AAClE,MAAA,QAAQ,CAAC,KAAK,CAAC,QAAP,CAAR;AACD;AACF,GAJa,CAAd;AAKA,EAAA,SAAS,CAAC,MAAM;AACd,QAAI,YAAY,IAAI,CAAC,KAArB,EAA4B;AAC1B,MAAA,oBAAoB,CAAC,YAAD,CAApB;AACD;AACF,GAJQ,EAIN,CAAC,YAAD,EAAe,KAAf,EAAsB,oBAAtB,CAJM,CAAT;AAKA,SAAO,CAAC,KAAD,EAAQ,oBAAR,CAAP;AACF","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\nexport function useLocalStorageValue<T extends string>({\n  key,\n  defaultValue = undefined,\n}: {\n  key: string;\n  defaultValue?: T;\n}) {\n  const [value, setValue] = useState<T>(\n    typeof window !== 'undefined' && 'localStorage' in window\n      ? (window.localStorage.getItem(key) as T)\n      : ((defaultValue ?? '') as T)\n  );\n\n  const setLocalStorageValue = useCallback(\n    (val: T | ((prevState: T) => T)) => {\n      if (typeof val === 'function') {\n        setValue((current) => {\n          const result = val(current);\n          window.localStorage.setItem(key, result);\n          return result;\n        });\n      } else {\n        window.localStorage.setItem(key, val);\n        setValue(val);\n      }\n    },\n    [key]\n  );\n\n  useWindowEvent('storage', (event) => {\n    if (event.storageArea === window.localStorage && event.key === key) {\n      setValue(event.newValue as T);\n    }\n  });\n\n  useEffect(() => {\n    if (defaultValue && !value) {\n      setLocalStorageValue(defaultValue);\n    }\n  }, [defaultValue, value, setLocalStorageValue]);\n\n  return [value, setLocalStorageValue] as const;\n}\n"]},"metadata":{},"sourceType":"module"}