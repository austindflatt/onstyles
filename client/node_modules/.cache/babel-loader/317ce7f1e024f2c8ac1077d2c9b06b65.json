{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useMantineTheme, useExtractedMargins, getSizeValue } from '@mantine/styles';\nimport useStyles from './SimpleGrid.styles.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst SimpleGrid = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    className,\n    breakpoints = [],\n    cols,\n    spacing = \"md\",\n    children,\n    style,\n    sx\n  } = _b,\n      others = __objRest(_b, [\"className\", \"breakpoints\", \"cols\", \"spacing\", \"children\", \"style\", \"sx\"]);\n\n  const theme = useMantineTheme();\n  const {\n    mergedStyles,\n    rest\n  } = useExtractedMargins({\n    others,\n    style\n  });\n  const sortedBreakpoints = [...breakpoints].sort((a, b) => getSizeValue({\n    size: b.maxWidth,\n    sizes: theme.breakpoints\n  }) - getSizeValue({\n    size: a.maxWidth,\n    sizes: theme.breakpoints\n  }));\n  const {\n    classes,\n    cx\n  } = useStyles({\n    breakpoints: sortedBreakpoints,\n    cols,\n    spacing\n  }, {\n    sx,\n    name: \"SimpleGrid\"\n  });\n  return /* @__PURE__ */React.createElement(\"div\", __spreadValues({\n    className: cx(classes.root, className),\n    style: mergedStyles,\n    ref\n  }, rest), children);\n});\nSimpleGrid.displayName = \"@mantine/core/SimpleGrid\";\nexport { SimpleGrid };","map":{"version":3,"sources":["../../../src/components/SimpleGrid/SimpleGrid.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  useExtractedMargins,\n  getSizeValue,\n  useMantineTheme,\n} from '@mantine/styles';\nimport useStyles, { SimpleGridBreakpoint } from './SimpleGrid.styles';\n\nexport interface SimpleGridProps extends DefaultProps, React.ComponentPropsWithoutRef<'div'> {\n  /** Breakpoints data to change items per row and spacing based on max-width */\n  breakpoints?: SimpleGridBreakpoint[];\n\n  /** Default amount of columns, used when none of breakpoints can be applied  */\n  cols: number;\n\n  /** Default spacing between columns, used when none of breakpoints can be applied */\n  spacing?: MantineNumberSize;\n}\n\nexport const SimpleGrid = forwardRef<HTMLDivElement, SimpleGridProps>(\n  (\n    {\n      className,\n      breakpoints = [],\n      cols,\n      spacing = 'md',\n      children,\n      style,\n      sx,\n      ...others\n    }: SimpleGridProps,\n    ref\n  ) => {\n    const theme = useMantineTheme();\n    const { mergedStyles, rest } = useExtractedMargins({ others, style });\n    const sortedBreakpoints = [...breakpoints].sort(\n      (a, b) =>\n        getSizeValue({ size: b.maxWidth, sizes: theme.breakpoints }) -\n        getSizeValue({ size: a.maxWidth, sizes: theme.breakpoints })\n    );\n    const { classes, cx } = useStyles(\n      { breakpoints: sortedBreakpoints, cols, spacing },\n      { sx, name: 'SimpleGrid' }\n    );\n\n    return (\n      <div className={cx(classes.root, className)} style={mergedStyles} ref={ref} {...rest}>\n        {children}\n      </div>\n    );\n  }\n);\n\nSimpleGrid.displayName = '@mantine/core/SimpleGrid';\n"]},"metadata":{},"sourceType":"module"}