{"ast":null,"code":"import { useState } from 'react';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nfunction useForm({\n  initialValues,\n  validationRules = {}\n}) {\n  const initialErrors = Object.keys(initialValues).reduce((acc, field) => {\n    acc[field] = false;\n    return acc;\n  }, {});\n  const [errors, setErrors] = useState(initialErrors);\n  const [values, setValues] = useState(initialValues);\n\n  const resetErrors = () => setErrors(initialErrors);\n\n  const reset = () => {\n    setValues(initialValues);\n    resetErrors();\n  };\n\n  const validate = () => {\n    let isValid = true;\n    const validationErrors = Object.keys(values).reduce((acc, field) => {\n      if (validationRules && typeof validationRules[field] === \"function\" && !validationRules[field](values[field], values)) {\n        acc[field] = true;\n        isValid = false;\n      } else {\n        acc[field] = false;\n      }\n\n      return acc;\n    }, {});\n    setErrors(validationErrors);\n    return isValid;\n  };\n\n  const validateField = field => setErrors(currentErrors => __spreadProps(__spreadValues({}, currentErrors), {\n    [field]: typeof validationRules[field] === \"function\" ? !validationRules[field](values[field], values) : false\n  }));\n\n  const setFieldError = (field, error) => setErrors(currentErrors => __spreadProps(__spreadValues({}, currentErrors), {\n    [field]: error\n  }));\n\n  const setFieldValue = (field, value) => {\n    setValues(currentValues => __spreadProps(__spreadValues({}, currentValues), {\n      [field]: value\n    }));\n    setFieldError(field, false);\n  };\n\n  const onSubmit = handleSubmit => event => {\n    event && event.preventDefault();\n    validate() && handleSubmit(values);\n  };\n\n  return {\n    values,\n    errors,\n    validate,\n    reset,\n    setErrors,\n    setValues,\n    setFieldValue,\n    setFieldError,\n    validateField,\n    resetErrors,\n    onSubmit\n  };\n}\n\nexport { useForm };","map":{"version":3,"sources":["../../src/use-form/use-form.ts"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nexport type ValidationRule<T> = {\n  readonly [P in keyof T]?: (value: T[P], values?: T) => boolean;\n};\n\nexport interface UseForm<T> {\n  validationRules?: ValidationRule<T>;\n  initialValues: T;\n}\n\nexport function useForm<T extends { [key: string]: any }>({\n  initialValues,\n  validationRules = {},\n}: UseForm<T>) {\n  type ValidationErrors = Record<keyof T, boolean>;\n\n  const initialErrors = Object.keys(initialValues).reduce((acc, field) => {\n    acc[field as keyof T] = false;\n    return acc;\n  }, {} as ValidationErrors);\n\n  const [errors, setErrors] = useState(initialErrors);\n  const [values, setValues] = useState(initialValues);\n\n  const resetErrors = () => setErrors(initialErrors);\n\n  const reset = () => {\n    setValues(initialValues);\n    resetErrors();\n  };\n\n  const validate = () => {\n    let isValid = true;\n\n    const validationErrors = Object.keys(values).reduce((acc, field) => {\n      if (\n        validationRules &&\n        typeof validationRules[field] === 'function' &&\n        !validationRules[field](values[field], values)\n      ) {\n        acc[field as keyof T] = true;\n        isValid = false;\n      } else {\n        acc[field as keyof T] = false;\n      }\n\n      return acc;\n    }, {} as ValidationErrors);\n\n    setErrors(validationErrors);\n    return isValid;\n  };\n\n  const validateField = (field: keyof T) =>\n    setErrors((currentErrors) => ({\n      ...currentErrors,\n      [field]:\n        typeof validationRules[field] === 'function'\n          ? !validationRules[field](values[field], values)\n          : false,\n    }));\n\n  const setFieldError = (field: keyof T, error: boolean) =>\n    setErrors((currentErrors) => ({ ...currentErrors, [field]: error }));\n\n  const setFieldValue = <K extends keyof T, U extends T[K]>(field: K, value: U) => {\n    setValues((currentValues) => ({ ...currentValues, [field]: value }));\n    setFieldError(field, false);\n  };\n\n  const onSubmit = (handleSubmit: (values: T) => any) => (event?: React.FormEvent) => {\n    event && event.preventDefault();\n    validate() && handleSubmit(values);\n  };\n\n  return {\n    values,\n    errors,\n    validate,\n    reset,\n    setErrors,\n    setValues,\n    setFieldValue,\n    setFieldError,\n    validateField,\n    resetErrors,\n    onSubmit,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}