{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { Text } from '../Text/Text.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst Anchor = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    component\n  } = _b,\n      others = __objRest(_b, [\"component\"]);\n\n  return /* @__PURE__ */React.createElement(Text, __spreadValues({\n    component: component || \"a\",\n    variant: \"link\",\n    ref\n  }, others));\n});\nAnchor.displayName = \"@mantine/core/Anchor\";\nexport { Anchor };","map":{"version":3,"sources":["../../../src/components/Anchor/Anchor.tsx"],"names":[],"mappings":";;AAAA,IAAI,SAAS,GAAG,MAAM,CAAC,cAAvB;AACA,IAAI,mBAAmB,GAAG,MAAM,CAAC,qBAAjC;AACA,IAAI,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,cAApC;AACA,IAAI,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,oBAApC;;AACA,IAAI,eAAe,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,KAAX,KAAqB,GAAG,IAAI,GAAP,GAAa,SAAS,CAAC,GAAD,EAAM,GAAN,EAAW;AAAE,EAAA,UAAU,EAAE,IAAd;AAAoB,EAAA,YAAY,EAAE,IAAlC;AAAwC,EAAA,QAAQ,EAAE,IAAlD;AAAwD,EAAA;AAAxD,CAAX,CAAtB,GAAoG,GAAG,CAAC,GAAD,CAAH,GAAW,KAA1J;;AACA,IAAI,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,KAAU;AAC7B,OAAK,IAAI,IAAT,IAAiB,CAAC,KAAK,CAAC,GAAG,EAAT,CAAlB,EACE,IAAI,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,IAArB,CAAJ,EACE,eAAe,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAC,IAAD,CAAX,CAAf;;AACJ,MAAI,mBAAJ,EACE,KAAK,IAAI,IAAT,IAAiB,mBAAmB,CAAC,CAAD,CAApC,EAAyC;AACvC,QAAI,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,IAArB,CAAJ,EACE,eAAe,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAC,IAAD,CAAX,CAAf;AACH;AACH,SAAO,CAAP;AACD,CAVD;;AAWA,IAAI,SAAS,GAAG,CAAC,MAAD,EAAS,OAAT,KAAqB;AACnC,MAAI,MAAM,GAAG,EAAb;;AACA,OAAK,IAAI,IAAT,IAAiB,MAAjB,EACE,IAAI,YAAY,CAAC,IAAb,CAAkB,MAAlB,EAA0B,IAA1B,KAAmC,OAAO,CAAC,OAAR,CAAgB,IAAhB,IAAwB,CAA/D,EACE,MAAM,CAAC,IAAD,CAAN,GAAe,MAAM,CAAC,IAAD,CAArB;;AACJ,MAAI,MAAM,IAAI,IAAV,IAAkB,mBAAtB,EACE,KAAK,IAAI,IAAT,IAAiB,mBAAmB,CAAC,MAAD,CAApC,EAA8C;AAC5C,QAAI,OAAO,CAAC,OAAR,CAAgB,IAAhB,IAAwB,CAAxB,IAA6B,YAAY,CAAC,IAAb,CAAkB,MAAlB,EAA0B,IAA1B,CAAjC,EACE,MAAM,CAAC,IAAD,CAAN,GAAe,MAAM,CAAC,IAAD,CAArB;AACH;AACH,SAAO,MAAP;AACD,CAXD;;AAcY,MAAC,MAAM,GAAG,UAAU,CAAC,CAAC,EAAD,EAAK,GAAL,KAAa;AAC5C,MAAI,EAAE,GAAG,EAAT;AAAA,MAAa;AAAE,IAAA;AAAF,MAAgB,EAA7B;AAAA,MAAiC,MAAM,GAAG,SAAS,CAAC,EAAD,EAAK,CAAC,WAAD,CAAL,CAAnD;;AACA,SAAA,eAAuB,KAAK,CAAC,aAAN,CAAoB,IAApB,EAA0B,cAAc,CAAC;AAC9D,IAAA,SAAS,EAAE,SAAS,IAAI,GADsC;AAE9D,IAAA,OAAO,EAAE,MAFqD;AAG9D,IAAA;AAH8D,GAAD,EAI5D,MAJ4D,CAAxC,CAAvB;AAKD,CAP+B,CAApB;AAQZ,MAAM,CAAC,WAAP,GAAqB,sBAArB","sourcesContent":["import React, { forwardRef } from 'react';\nimport { PolymorphicComponentProps, PolymorphicRef } from '@mantine/styles';\nimport { Text, SharedTextProps } from '../Text/Text';\n\nexport type AnchorProps<C extends React.ElementType> = PolymorphicComponentProps<\n  C,\n  SharedTextProps\n>;\n\ntype AnchorComponent = <C extends React.ElementType = 'a'>(\n  props: AnchorProps<C>\n) => React.ReactElement;\n\nexport const Anchor: AnchorComponent & { displayName?: string } = forwardRef(\n  <C extends React.ElementType = 'a'>(\n    { component, ...others }: AnchorProps<C>,\n    ref: PolymorphicRef<C>\n  ) => <Text component={(component || 'a') as any} variant=\"link\" ref={ref} {...others} />\n);\n\nAnchor.displayName = '@mantine/core/Anchor';\n"]},"metadata":{},"sourceType":"module"}