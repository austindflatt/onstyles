{"ast":null,"code":"import { createStyles, getSizeValue } from '@mantine/styles';\nconst POSITIONS = {\n  left: \"flex-start\",\n  center: \"center\",\n  right: \"flex-end\",\n  apart: \"space-between\"\n};\nvar useStyles = createStyles((theme, {\n  spacing,\n  position,\n  noWrap,\n  direction,\n  grow,\n  align,\n  withGutter,\n  count\n}) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align || (direction === \"row\" ? \"center\" : grow ? \"stretch\" : POSITIONS[position]),\n    flexWrap: noWrap ? \"nowrap\" : \"wrap\",\n    justifyContent: direction === \"row\" && POSITIONS[position],\n    margin: -1 * getSizeValue({\n      size: spacing,\n      sizes: theme.spacing\n    }) / 2,\n    padding: withGutter ? getSizeValue({\n      size: spacing,\n      sizes: theme.spacing\n    }) / 2 : 0\n  },\n  child: {\n    maxWidth: grow && direction === \"row\" ? `calc(${100 / count}% - ${getSizeValue({\n      size: spacing,\n      sizes: theme.spacing\n    })}px)` : void 0,\n    flexGrow: grow ? 1 : 0,\n    margin: getSizeValue({\n      size: spacing,\n      sizes: theme.spacing\n    }) / 2\n  }\n}));\nexport default useStyles;","map":{"version":3,"sources":["../../../src/components/Group/Group.styles.ts"],"names":[],"mappings":";AACA,MAAM,SAAS,GAAG;AAChB,EAAA,IAAI,EAAE,YADU;AAEhB,EAAA,MAAM,EAAE,QAFQ;AAGhB,EAAA,KAAK,EAAE,UAHS;AAIhB,EAAA,KAAK,EAAE;AAJS,CAAlB;AAMA,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAD,EAAQ;AAAE,EAAA,OAAF;AAAW,EAAA,QAAX;AAAqB,EAAA,MAArB;AAA6B,EAAA,SAA7B;AAAwC,EAAA,IAAxC;AAA8C,EAAA,KAA9C;AAAqD,EAAA,UAArD;AAAiE,EAAA;AAAjE,CAAR,MAAsF;AAChH,EAAA,IAAI,EAAE;AACJ,IAAA,OAAO,EAAE,MADL;AAEJ,IAAA,aAAa,EAAE,SAFX;AAGJ,IAAA,UAAU,EAAE,KAAK,KAAK,SAAS,KAAK,KAAd,GAAsB,QAAtB,GAAiC,IAAI,GAAG,SAAH,GAAe,SAAS,CAAC,QAAD,CAAlE,CAHb;AAIJ,IAAA,QAAQ,EAAE,MAAM,GAAG,QAAH,GAAc,MAJ1B;AAKJ,IAAA,cAAc,EAAE,SAAS,KAAK,KAAd,IAAuB,SAAS,CAAC,QAAD,CAL5C;AAMJ,IAAA,MAAM,EAAE,CAAC,CAAD,GAAK,YAAY,CAAC;AAAE,MAAA,IAAI,EAAE,OAAR;AAAiB,MAAA,KAAK,EAAE,KAAK,CAAC;AAA9B,KAAD,CAAjB,GAA6D,CANjE;AAOJ,IAAA,OAAO,EAAE,UAAU,GAAG,YAAY,CAAC;AAAE,MAAA,IAAI,EAAE,OAAR;AAAiB,MAAA,KAAK,EAAE,KAAK,CAAC;AAA9B,KAAD,CAAZ,GAAwD,CAA3D,GAA+D;AAP9E,GAD0G;AAUhH,EAAA,KAAK,EAAE;AACL,IAAA,QAAQ,EAAE,IAAI,IAAI,SAAS,KAAK,KAAtB,GAA+B,QAAO,MAAM,KAAM,OAAM,YAAY,CAAC;AAAE,MAAA,IAAI,EAAE,OAAR;AAAiB,MAAA,KAAK,EAAE,KAAK,CAAC;AAA9B,KAAD,CAA0C,KAA9G,GAAqH,KAAK,CAD/H;AAEL,IAAA,QAAQ,EAAE,IAAI,GAAG,CAAH,GAAO,CAFhB;AAGL,IAAA,MAAM,EAAE,YAAY,CAAC;AAAE,MAAA,IAAI,EAAE,OAAR;AAAiB,MAAA,KAAK,EAAE,KAAK,CAAC;AAA9B,KAAD,CAAZ,GAAwD;AAH3D;AAVyG,CAAtF,CAAD,CAA3B","sourcesContent":["import React from 'react';\nimport { createStyles, MantineNumberSize, getSizeValue } from '@mantine/styles';\n\nexport type GroupPosition = 'right' | 'center' | 'left' | 'apart';\n\ninterface GroupStyles {\n  position: GroupPosition;\n  noWrap: boolean;\n  grow: boolean;\n  spacing: MantineNumberSize;\n  withGutter: boolean;\n  direction: 'row' | 'column';\n  align: React.CSSProperties['alignItems'];\n  count: number;\n}\n\nconst POSITIONS = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  apart: 'space-between',\n};\n\nexport default createStyles(\n  (\n    theme,\n    { spacing, position, noWrap, direction, grow, align, withGutter, count }: GroupStyles\n  ) => ({\n    root: {\n      display: 'flex',\n      flexDirection: direction,\n      alignItems:\n        align || (direction === 'row' ? 'center' : grow ? 'stretch' : POSITIONS[position]),\n      flexWrap: noWrap ? 'nowrap' : 'wrap',\n      justifyContent: direction === 'row' && POSITIONS[position],\n      margin: (-1 * getSizeValue({ size: spacing, sizes: theme.spacing })) / 2,\n      padding: withGutter ? getSizeValue({ size: spacing, sizes: theme.spacing }) / 2 : 0,\n    },\n\n    child: {\n      maxWidth:\n        grow && direction === 'row'\n          ? `calc(${100 / count}% - ${getSizeValue({ size: spacing, sizes: theme.spacing })}px)`\n          : undefined,\n      flexGrow: grow ? 1 : 0,\n      margin: getSizeValue({ size: spacing, sizes: theme.spacing }) / 2,\n    },\n  })\n);\n"]},"metadata":{},"sourceType":"module"}