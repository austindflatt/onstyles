{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useMantineTheme, useExtractedMargins } from '@mantine/styles';\nimport useStyles from './Divider.styles.js';\nimport { Text } from '../Text/Text.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst Divider = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    className,\n    style,\n    color,\n    orientation = \"horizontal\",\n    size = \"xs\",\n    label,\n    labelPosition = \"left\",\n    labelProps,\n    variant = \"solid\",\n    styles,\n    classNames,\n    sx\n  } = _b,\n      others = __objRest(_b, [\"className\", \"style\", \"color\", \"orientation\", \"size\", \"label\", \"labelPosition\", \"labelProps\", \"variant\", \"styles\", \"classNames\", \"sx\"]);\n\n  const theme = useMantineTheme();\n\n  const _color = color || (theme.colorScheme === \"dark\" ? \"dark\" : \"gray\");\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color: _color,\n    size,\n    variant\n  }, {\n    classNames,\n    styles,\n    sx,\n    name: \"Divider\"\n  });\n  const {\n    mergedStyles,\n    rest\n  } = useExtractedMargins({\n    others,\n    style\n  });\n  const vertical = orientation === \"vertical\";\n  const horizontal = !vertical;\n  const withLabel = !!label && horizontal;\n  return /* @__PURE__ */React.createElement(\"div\", __spreadValues({\n    ref,\n    className: cx({\n      [classes.vertical]: vertical,\n      [classes.horizontal]: horizontal,\n      [classes.withLabel]: withLabel\n    }, className),\n    style: mergedStyles\n  }, rest), !!label && horizontal && /* @__PURE__ */React.createElement(Text, __spreadProps(__spreadValues({}, labelProps), {\n    color: _color,\n    size: (labelProps == null ? void 0 : labelProps.size) || \"xs\",\n    style: {\n      marginTop: 2\n    },\n    className: cx(classes.label, classes[labelPosition])\n  }), label));\n});\nDivider.displayName = \"@mantine/core/Divider\";\nexport { Divider };","map":{"version":3,"sources":["../../../src/components/Divider/Divider.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  useMantineTheme,\n  DefaultProps,\n  MantineNumberSize,\n  MantineColor,\n  useExtractedMargins,\n} from '@mantine/styles';\nimport useStyles from './Divider.styles';\nimport { Text } from '../Text/Text';\n\nexport type DividerStylesNames = 'label';\n\nexport interface DividerProps\n  extends DefaultProps<DividerStylesNames>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Line color from theme, defaults to gray in light color scheme and to dark in dark color scheme */\n  color?: MantineColor;\n\n  /** Line orientation */\n  orientation?: 'horizontal' | 'vertical';\n\n  /** Sets height in horizontal orientation and with in vertical */\n  size?: MantineNumberSize;\n\n  /** Adds text after line in horizontal orientation */\n  label?: React.ReactNode;\n\n  /** Label position */\n  labelPosition?: 'left' | 'center' | 'right';\n\n  /** Props spread to Text component in label */\n  labelProps?: Record<string, any>;\n\n  /** Divider borderStyle */\n  variant?: 'solid' | 'dashed' | 'dotted';\n}\n\nexport const Divider = forwardRef<HTMLDivElement, DividerProps>(\n  (\n    {\n      className,\n      style,\n      color,\n      orientation = 'horizontal',\n      size = 'xs',\n      label,\n      labelPosition = 'left',\n      labelProps,\n      variant = 'solid',\n      styles,\n      classNames,\n      sx,\n      ...others\n    }: DividerProps,\n    ref\n  ) => {\n    const theme = useMantineTheme();\n    const _color = color || (theme.colorScheme === 'dark' ? 'dark' : 'gray');\n    const { classes, cx } = useStyles(\n      { color: _color, size, variant },\n      { classNames, styles, sx, name: 'Divider' }\n    );\n    const { mergedStyles, rest } = useExtractedMargins({ others, style });\n\n    const vertical = orientation === 'vertical';\n    const horizontal = !vertical;\n    const withLabel = !!label && horizontal;\n\n    return (\n      <div\n        ref={ref}\n        className={cx(\n          {\n            [classes.vertical]: vertical,\n            [classes.horizontal]: horizontal,\n            [classes.withLabel]: withLabel,\n          },\n          className\n        )}\n        style={mergedStyles}\n        {...rest}\n      >\n        {!!label && horizontal && (\n          <Text\n            {...labelProps}\n            color={_color}\n            size={labelProps?.size || 'xs'}\n            style={{ marginTop: 2 }}\n            className={cx(classes.label, classes[labelPosition])}\n          >\n            {label}\n          </Text>\n        )}\n      </div>\n    );\n  }\n);\n\nDivider.displayName = '@mantine/core/Divider';\n"]},"metadata":{},"sourceType":"module"}