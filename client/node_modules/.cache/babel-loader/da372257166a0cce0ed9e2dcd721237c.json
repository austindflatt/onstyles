{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useUuid, useUncontrolled } from '@mantine/hooks';\nimport { useMantineTheme, useExtractedMargins } from '@mantine/styles';\nimport useStyles from './Chip.styles.js';\nimport { CheckboxIcon } from '../../Checkbox/CheckboxIcon.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst Chip = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    radius = \"xl\",\n    type = \"checkbox\",\n    size = \"sm\",\n    variant,\n    disabled = false,\n    __staticSelector = \"Chip\",\n    id,\n    color,\n    children,\n    className,\n    classNames,\n    style,\n    styles,\n    checked,\n    defaultChecked,\n    onChange\n  } = _b,\n      others = __objRest(_b, [\"radius\", \"type\", \"size\", \"variant\", \"disabled\", \"__staticSelector\", \"id\", \"color\", \"children\", \"className\", \"classNames\", \"style\", \"styles\", \"checked\", \"defaultChecked\", \"onChange\"]);\n\n  const uuid = useUuid(id);\n  const theme = useMantineTheme();\n  const {\n    classes,\n    cx\n  } = useStyles({\n    radius,\n    size,\n    color\n  }, {\n    classNames,\n    styles,\n    name: __staticSelector\n  });\n  const {\n    mergedStyles,\n    rest\n  } = useExtractedMargins({\n    others,\n    style\n  });\n  const [value, setValue] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: true,\n    onChange,\n    rule: val => typeof val === \"boolean\"\n  });\n  const defaultVariant = theme.colorScheme === \"dark\" ? \"filled\" : \"outline\";\n  return /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.root, className),\n    style: mergedStyles\n  }, /* @__PURE__ */React.createElement(\"input\", __spreadValues({\n    type,\n    className: classes.input,\n    checked: value,\n    onChange: event => setValue(event.currentTarget.checked),\n    id: uuid,\n    disabled,\n    ref\n  }, rest)), /* @__PURE__ */React.createElement(\"label\", {\n    className: cx(classes.label, {\n      [classes.checked]: value,\n      [classes.disabled]: disabled\n    }, classes[variant || defaultVariant]),\n    htmlFor: uuid\n  }, value && /* @__PURE__ */React.createElement(\"span\", {\n    className: classes.iconWrapper\n  }, /* @__PURE__ */React.createElement(CheckboxIcon, {\n    indeterminate: false,\n    className: classes.checkIcon\n  })), children));\n});\nChip.displayName = \"@mantine/core/Chip\";\nexport { Chip };","map":{"version":3,"sources":["../../../../src/components/Chips/Chip/Chip.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useUncontrolled, useUuid } from '@mantine/hooks';\nimport {\n  useMantineTheme,\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  MantineColor,\n  ClassNames,\n  useExtractedMargins,\n} from '@mantine/styles';\nimport { CheckboxIcon } from '../../Checkbox';\nimport useStyles from './Chip.styles';\n\nexport type ChipStylesNames = Exclude<ClassNames<typeof useStyles>, 'filled' | 'outline'>;\n\nexport interface ChipProps\n  extends DefaultProps<ChipStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'input'>, 'size' | 'onChange'> {\n  /** Chip radius from theme or number to set value in px */\n  radius?: MantineNumberSize;\n\n  /** Predefined chip size */\n  size?: MantineSize;\n\n  /** Chip input type */\n  type?: 'radio' | 'checkbox';\n\n  /** Controls chip appearance, defaults to filled with dark theme and to outline in light theme */\n  variant?: 'outline' | 'filled';\n\n  /** Chip label */\n  children: React.ReactNode;\n\n  /** Checked state for controlled component */\n  checked?: boolean;\n\n  /** Default value for uncontrolled component */\n  defaultChecked?: boolean;\n\n  /** Calls when checked state changes */\n  onChange?(checked: boolean): void;\n\n  /** Active color from theme, defaults to theme.primaryColor */\n  color?: MantineColor;\n\n  /** Static id to bind input with label */\n  id?: string;\n\n  /** Static selector base */\n  __staticSelector?: string;\n\n  /** Input value */\n  value: string;\n}\n\nexport const Chip = forwardRef<HTMLInputElement, ChipProps>(\n  (\n    {\n      radius = 'xl',\n      type = 'checkbox',\n      size = 'sm',\n      variant,\n      disabled = false,\n      __staticSelector = 'Chip',\n      id,\n      color,\n      children,\n      className,\n      classNames,\n      style,\n      styles,\n      checked,\n      defaultChecked,\n      onChange,\n      ...others\n    }: ChipProps,\n    ref\n  ) => {\n    const uuid = useUuid(id);\n    const theme = useMantineTheme();\n    const { classes, cx } = useStyles(\n      { radius, size, color },\n      { classNames, styles, name: __staticSelector }\n    );\n    const { mergedStyles, rest } = useExtractedMargins({ others, style });\n    const [value, setValue] = useUncontrolled({\n      value: checked,\n      defaultValue: defaultChecked,\n      finalValue: true,\n      onChange,\n      rule: (val) => typeof val === 'boolean',\n    });\n\n    const defaultVariant = theme.colorScheme === 'dark' ? 'filled' : 'outline';\n\n    return (\n      <div className={cx(classes.root, className)} style={mergedStyles}>\n        <input\n          type={type}\n          className={classes.input}\n          checked={value}\n          onChange={(event) => setValue(event.currentTarget.checked)}\n          id={uuid}\n          disabled={disabled}\n          ref={ref}\n          {...rest}\n        />\n        <label\n          className={cx(\n            classes.label,\n            { [classes.checked]: value, [classes.disabled]: disabled },\n            classes[variant || defaultVariant]\n          )}\n          htmlFor={uuid}\n        >\n          {value && (\n            <span className={classes.iconWrapper}>\n              <CheckboxIcon indeterminate={false} className={classes.checkIcon} />\n            </span>\n          )}\n          {children}\n        </label>\n      </div>\n    );\n  }\n);\n\nChip.displayName = '@mantine/core/Chip';\n"]},"metadata":{},"sourceType":"module"}