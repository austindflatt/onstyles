{"ast":null,"code":"function getCurveProps({\n  size,\n  thickness,\n  sum,\n  value,\n  root,\n  offset\n}) {\n  const radius = (size * 0.9 - thickness * 2) / 2;\n  const deg = Math.PI * radius * 2 / 100;\n  const strokeDasharray = root ? `${(100 - sum) * deg}, ${sum * deg}` : `${value * deg}, ${(100 - value) * deg}`;\n  return {\n    strokeWidth: thickness,\n    cx: size / 2,\n    cy: size / 2,\n    r: radius,\n    transform: root ? `scale(1, -1) translate(0, -${size})` : null,\n    strokeDasharray,\n    strokeDashoffset: root ? 0 : offset\n  };\n}\n\nexport { getCurveProps };","map":{"version":3,"sources":["../../../../src/components/RingProgress/Curve/get-curve-props.ts"],"names":[],"mappings":"AAAO,SAAS,aAAT,CAAuB;AAAE,EAAA,IAAF;AAAQ,EAAA,SAAR;AAAmB,EAAA,GAAnB;AAAwB,EAAA,KAAxB;AAA+B,EAAA,IAA/B;AAAqC,EAAA;AAArC,CAAvB,EAAsE;AAC3E,QAAM,MAAM,GAAG,CAAC,IAAI,GAAG,GAAP,GAAa,SAAS,GAAG,CAA1B,IAA+B,CAA9C;AACA,QAAM,GAAG,GAAG,IAAI,CAAC,EAAL,GAAU,MAAV,GAAmB,CAAnB,GAAuB,GAAnC;AACA,QAAM,eAAe,GAAG,IAAI,GAAI,GAAE,CAAC,MAAM,GAAP,IAAc,GAAI,KAAI,GAAG,GAAG,GAAI,EAAtC,GAA2C,GAAE,KAAK,GAAG,GAAI,KAAI,CAAC,MAAM,KAAP,IAAgB,GAAI,EAA7G;AACA,SAAO;AACL,IAAA,WAAW,EAAE,SADR;AAEL,IAAA,EAAE,EAAE,IAAI,GAAG,CAFN;AAGL,IAAA,EAAE,EAAE,IAAI,GAAG,CAHN;AAIL,IAAA,CAAC,EAAE,MAJE;AAKL,IAAA,SAAS,EAAE,IAAI,GAAI,8BAA6B,IAAK,GAAtC,GAA2C,IALrD;AAML,IAAA,eANK;AAOL,IAAA,gBAAgB,EAAE,IAAI,GAAG,CAAH,GAAO;AAPxB,GAAP;AASF","sourcesContent":["interface GetCurveProps {\n  size: number;\n  thickness: number;\n  sum: number;\n  value: number;\n  root: boolean;\n  offset: number;\n}\n\nexport function getCurveProps({ size, thickness, sum, value, root, offset }: GetCurveProps) {\n  const radius = (size * 0.9 - thickness * 2) / 2;\n  const deg = (Math.PI * radius * 2) / 100;\n\n  const strokeDasharray = root\n    ? `${(100 - sum) * deg}, ${sum * deg}`\n    : `${value * deg}, ${(100 - value) * deg}`;\n\n  return {\n    strokeWidth: thickness,\n    cx: size / 2,\n    cy: size / 2,\n    r: radius,\n    transform: root ? `scale(1, -1) translate(0, -${size})` : null,\n    strokeDasharray,\n    strokeDashoffset: root ? 0 : offset,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}