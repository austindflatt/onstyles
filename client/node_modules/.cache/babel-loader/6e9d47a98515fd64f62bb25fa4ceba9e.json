{"ast":null,"code":"import { createStyles, getSizeValue, getFontStyles } from '@mantine/styles';\nimport { getSortedBreakpoints } from '../get-sorted-breakpoints.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar useStyles = createStyles((theme, {\n  height,\n  width,\n  padding,\n  fixed,\n  position,\n  hiddenBreakpoint,\n  zIndex\n}) => {\n  const breakpoints = typeof (width == null ? void 0 : width.breakpoints) === \"object\" && width.breakpoints !== null ? getSortedBreakpoints(width.breakpoints, theme).reduce((acc, [breakpoint, breakpointSize]) => {\n    acc[`@media (max-width: ${breakpoint}px)`] = {\n      width: breakpointSize,\n      minWidth: breakpointSize\n    };\n    return acc;\n  }, {}) : null;\n  return {\n    root: __spreadValues(__spreadProps(__spreadValues(__spreadValues({}, getFontStyles(theme)), position), {\n      zIndex,\n      height,\n      width: width.base,\n      position: fixed ? \"fixed\" : \"static\",\n      boxSizing: \"border-box\",\n      padding: getSizeValue({\n        size: padding,\n        sizes: theme.spacing\n      }),\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.white,\n      borderRight: `1px solid ${theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.colors.gray[2]}`\n    }), breakpoints),\n    hidden: {\n      [`@media (max-width: ${getSizeValue({\n        size: hiddenBreakpoint,\n        sizes: theme.breakpoints\n      })}px)`]: {\n        display: \"none\"\n      }\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["../../../../src/components/AppShell/Navbar/Navbar.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { createStyles, getFontStyles, MantineNumberSize, getSizeValue } from '@mantine/styles';\nimport { getSortedBreakpoints } from '../get-sorted-breakpoints';\n\nexport interface NavbarWidth {\n  base: string | number;\n  breakpoints?: Partial<Record<string, string | number>>;\n}\n\nexport interface NavbarPosition {\n  top?: number;\n  left?: number;\n  bottom?: number;\n  right?: number;\n}\n\ninterface NavbarStyles {\n  width: NavbarWidth;\n  height: string | number;\n  padding: MantineNumberSize;\n  position: NavbarPosition;\n  hiddenBreakpoint: MantineNumberSize;\n  fixed: boolean;\n  zIndex: number;\n}\n\nexport default createStyles(\n  (theme, { height, width, padding, fixed, position, hiddenBreakpoint, zIndex }: NavbarStyles) => {\n    const breakpoints =\n      typeof width?.breakpoints === 'object' && width.breakpoints !== null\n        ? getSortedBreakpoints(width.breakpoints, theme).reduce(\n            (acc, [breakpoint, breakpointSize]) => {\n              acc[`@media (max-width: ${breakpoint}px)`] = {\n                width: breakpointSize,\n                minWidth: breakpointSize,\n              };\n\n              return acc;\n            },\n            {}\n          )\n        : null;\n\n    return {\n      root: {\n        ...getFontStyles(theme),\n        ...position,\n        zIndex,\n        height,\n        width: width.base,\n        position: fixed ? 'fixed' : 'static',\n        boxSizing: 'border-box',\n        padding: getSizeValue({ size: padding, sizes: theme.spacing }),\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n        borderRight: `1px solid ${\n          theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[2]\n        }`,\n        ...breakpoints,\n      },\n\n      hidden: {\n        [`@media (max-width: ${getSizeValue({\n          size: hiddenBreakpoint,\n          sizes: theme.breakpoints,\n        })}px)`]: {\n          display: 'none',\n        },\n      },\n    };\n  }\n);\n"]},"metadata":{},"sourceType":"module"}