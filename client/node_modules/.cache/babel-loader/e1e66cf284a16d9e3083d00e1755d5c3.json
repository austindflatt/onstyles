{"ast":null,"code":"import { createStyles, getSizeValue, getFocusStyles, getSharedColorScheme, getFontStyles } from '@mantine/styles';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nconst sizes = {\n  xs: 16,\n  sm: 26,\n  md: 38,\n  lg: 56,\n  xl: 84\n};\nvar useStyles = createStyles((theme, {\n  size,\n  radius,\n  color\n}) => ({\n  root: __spreadProps(__spreadValues({}, getFocusStyles(theme)), {\n    WebkitTapHighlightColor: \"transparent\",\n    boxSizing: \"border-box\",\n    position: \"relative\",\n    userSelect: \"none\",\n    overflow: \"hidden\",\n    width: getSizeValue({\n      size,\n      sizes\n    }),\n    minWidth: getSizeValue({\n      size,\n      sizes\n    }),\n    height: getSizeValue({\n      size,\n      sizes\n    }),\n    borderRadius: radius ? getSizeValue({\n      size: radius,\n      sizes: theme.radius\n    }) : size\n  }),\n  image: {\n    objectFit: \"cover\",\n    width: \"100%\",\n    height: \"100%\",\n    display: \"block\"\n  },\n  placeholder: __spreadProps(__spreadValues({}, getFontStyles(theme)), {\n    fontSize: getSizeValue({\n      size,\n      sizes\n    }) / 2.5,\n    color: getSharedColorScheme({\n      theme,\n      color,\n      variant: \"light\"\n    }).color,\n    fontWeight: 700,\n    backgroundColor: getSharedColorScheme({\n      theme,\n      color,\n      variant: \"light\"\n    }).background,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n    userSelect: \"none\"\n  }),\n  placeholderIcon: {\n    width: \"70%\",\n    height: \"70%\",\n    color: getSharedColorScheme({\n      theme,\n      color,\n      variant: \"light\"\n    }).color\n  }\n}));\nexport default useStyles;\nexport { sizes };","map":{"version":3,"sources":["../../../src/components/Avatar/Avatar.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  createStyles,\n  MantineNumberSize,\n  MantineColor,\n  getSizeValue,\n  getFontStyles,\n  getSharedColorScheme,\n  getFocusStyles,\n} from '@mantine/styles';\n\ninterface AvatarStyles {\n  size: MantineNumberSize;\n  radius: MantineNumberSize;\n  color: MantineColor;\n}\n\nexport const sizes = {\n  xs: 16,\n  sm: 26,\n  md: 38,\n  lg: 56,\n  xl: 84,\n};\n\nexport default createStyles((theme, { size, radius, color }: AvatarStyles) => ({\n  root: {\n    ...getFocusStyles(theme),\n    WebkitTapHighlightColor: 'transparent',\n    boxSizing: 'border-box',\n    position: 'relative',\n    userSelect: 'none',\n    overflow: 'hidden',\n    width: getSizeValue({ size, sizes }),\n    minWidth: getSizeValue({ size, sizes }),\n    height: getSizeValue({ size, sizes }),\n    borderRadius: radius ? getSizeValue({ size: radius, sizes: theme.radius }) : size,\n  },\n\n  image: {\n    objectFit: 'cover',\n    width: '100%',\n    height: '100%',\n    display: 'block',\n  },\n\n  placeholder: {\n    ...getFontStyles(theme),\n    fontSize: getSizeValue({ size, sizes }) / 2.5,\n    color: getSharedColorScheme({ theme, color, variant: 'light' }).color,\n    fontWeight: 700,\n    backgroundColor: getSharedColorScheme({ theme, color, variant: 'light' }).background,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    userSelect: 'none',\n  },\n\n  placeholderIcon: {\n    width: '70%',\n    height: '70%',\n    color: getSharedColorScheme({ theme, color, variant: 'light' }).color,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}