{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { useExtractedMargins } from '@mantine/styles';\nimport { Button } from '../Button/Button.js';\nimport useStyles from './Spoiler.styles.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst Spoiler = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    className,\n    style,\n    children,\n    maxHeight = 100,\n    hideLabel,\n    showLabel,\n    transitionDuration = 200,\n    controlRef,\n    initialState = false,\n    classNames,\n    styles,\n    sx\n  } = _b,\n      others = __objRest(_b, [\"className\", \"style\", \"children\", \"maxHeight\", \"hideLabel\", \"showLabel\", \"transitionDuration\", \"controlRef\", \"initialState\", \"classNames\", \"styles\", \"sx\"]);\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    transitionDuration\n  }, {\n    sx,\n    classNames,\n    styles,\n    name: \"Spoiler\"\n  });\n  const {\n    mergedStyles,\n    rest\n  } = useExtractedMargins({\n    others,\n    style\n  });\n  const [show, setShowState] = useState(initialState);\n  const [spoiler, setSpoilerState] = useState(initialState);\n  const contentRef = useRef(null);\n  const spoilerMoreContent = show ? hideLabel : showLabel;\n  useEffect(() => {\n    setSpoilerState(maxHeight < contentRef.current.clientHeight);\n  }, [maxHeight, children]);\n  return /* @__PURE__ */React.createElement(\"div\", __spreadValues({\n    className: cx(classes.root, className),\n    style: mergedStyles,\n    ref\n  }, rest), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.content,\n    style: {\n      maxHeight: !show ? maxHeight : contentRef.current && contentRef.current.clientHeight\n    }\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    ref: contentRef\n  }, children)), spoiler && /* @__PURE__ */React.createElement(Button, {\n    variant: \"link\",\n    ref: controlRef,\n    onClick: () => setShowState(opened => !opened),\n    className: classes.control\n  }, spoilerMoreContent));\n});\nSpoiler.displayName = \"@mantine/core/Spoiler\";\nexport { Spoiler };","map":{"version":3,"sources":["../../../src/components/Spoiler/Spoiler.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, forwardRef } from 'react';\nimport { DefaultProps, ClassNames, useExtractedMargins } from '@mantine/styles';\nimport { Button } from '../Button/Button';\nimport useStyles from './Spoiler.styles';\n\nexport type SpoilerStylesNames = ClassNames<typeof useStyles>;\n\nexport interface SpoilerProps\n  extends DefaultProps<SpoilerStylesNames>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Max height of visible content, when this point is reached spoiler appears */\n  maxHeight: number;\n\n  /** Label for close spoiler action */\n  hideLabel: React.ReactNode;\n\n  /** Label for open spoiler action */\n  showLabel: React.ReactNode;\n\n  /** Get ref of spoiler toggle button */\n  controlRef?: React.ForwardedRef<HTMLButtonElement>;\n\n  /** Initial spoiler state, true to wrap content in spoiler, false to show content without spoiler, opened state will be updated on mount */\n  initialState?: boolean;\n\n  /** Spoiler reveal transition duration in ms, 0 or null to turn off animation */\n  transitionDuration?: number;\n}\n\nexport const Spoiler = forwardRef<HTMLDivElement, SpoilerProps>(\n  (\n    {\n      className,\n      style,\n      children,\n      maxHeight = 100,\n      hideLabel,\n      showLabel,\n      transitionDuration = 200,\n      controlRef,\n      initialState = false,\n      classNames,\n      styles,\n      sx,\n      ...others\n    }: SpoilerProps,\n    ref\n  ) => {\n    const { classes, cx } = useStyles(\n      { transitionDuration },\n      { sx, classNames, styles, name: 'Spoiler' }\n    );\n    const { mergedStyles, rest } = useExtractedMargins({ others, style });\n    const [show, setShowState] = useState(initialState);\n    const [spoiler, setSpoilerState] = useState(initialState);\n    const contentRef = useRef<HTMLDivElement>(null);\n\n    const spoilerMoreContent = show ? hideLabel : showLabel;\n\n    useEffect(() => {\n      setSpoilerState(maxHeight < contentRef.current.clientHeight);\n    }, [maxHeight, children]);\n\n    return (\n      <div className={cx(classes.root, className)} style={mergedStyles} ref={ref} {...rest}>\n        <div\n          className={classes.content}\n          style={{\n            maxHeight: !show ? maxHeight : contentRef.current && contentRef.current.clientHeight,\n          }}\n        >\n          <div ref={contentRef}>{children}</div>\n        </div>\n\n        {spoiler && (\n          <Button\n            variant=\"link\"\n            ref={controlRef}\n            onClick={() => setShowState((opened) => !opened)}\n            className={classes.control}\n          >\n            {spoilerMoreContent}\n          </Button>\n        )}\n      </div>\n    );\n  }\n);\n\nSpoiler.displayName = '@mantine/core/Spoiler';\n"]},"metadata":{},"sourceType":"module"}