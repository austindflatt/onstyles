{"ast":null,"code":"import { getThemeColor } from '../get-theme-color/get-theme-color.js';\nimport { hexToRgba } from '../hex-to-rgba/hex-to-rgba.js';\nconst DEFAULT_GRADIENT = {\n  from: \"indigo\",\n  to: \"cyan\",\n  deg: 45\n};\n\nfunction getSharedColorScheme({\n  color,\n  theme,\n  variant,\n  gradient\n}) {\n  if (variant === \"light\") {\n    return {\n      border: \"transparent\",\n      background: hexToRgba(getThemeColor({\n        theme,\n        color,\n        shade: theme.colorScheme === \"dark\" ? 9 : 0\n      }), theme.colorScheme === \"dark\" ? 0.35 : 1),\n      color: getThemeColor({\n        theme,\n        color,\n        shade: theme.colorScheme === \"dark\" ? 2 : 9\n      })\n    };\n  }\n\n  if (variant === \"default\") {\n    return {\n      border: theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.colors.gray[4],\n      background: theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.white,\n      color: theme.colorScheme === \"dark\" ? theme.white : theme.black\n    };\n  }\n\n  if (variant === \"white\") {\n    return {\n      border: \"transparent\",\n      background: theme.white,\n      color: getThemeColor({\n        theme,\n        color,\n        shade: 7\n      })\n    };\n  }\n\n  if (variant === \"outline\") {\n    return {\n      border: hexToRgba(getThemeColor({\n        theme,\n        color,\n        shade: theme.colorScheme === \"dark\" ? 3 : 7\n      }), 0.65),\n      background: \"transparent\",\n      color: getThemeColor({\n        theme,\n        color,\n        shade: theme.colorScheme === \"dark\" ? 3 : 7\n      })\n    };\n  }\n\n  if (variant === \"gradient\") {\n    const merged = {\n      from: (gradient == null ? void 0 : gradient.from) || DEFAULT_GRADIENT.from,\n      to: (gradient == null ? void 0 : gradient.to) || DEFAULT_GRADIENT.to,\n      deg: (gradient == null ? void 0 : gradient.deg) || DEFAULT_GRADIENT.deg\n    };\n    return {\n      background: `linear-gradient(${merged.deg}deg, ${getThemeColor({\n        theme,\n        color: merged.from,\n        shade: 6\n      })} 0%, ${getThemeColor({\n        theme,\n        color: merged.to,\n        shade: 6\n      })} 100%)`,\n      color: theme.white,\n      border: \"transparent\"\n    };\n  }\n\n  return {\n    border: \"transparent\",\n    background: getThemeColor({\n      theme,\n      color,\n      shade: theme.colorScheme === \"dark\" ? 8 : 6\n    }),\n    color: theme.white\n  };\n}\n\nexport { getSharedColorScheme };","map":{"version":3,"sources":["../../../../src/theme/utils/get-shared-color-scheme/get-shared-color-scheme.ts"],"names":[],"mappings":"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","sourcesContent":["import { MantineTheme } from '../../types';\nimport { getThemeColor } from '../get-theme-color/get-theme-color';\nimport { hexToRgba } from '../hex-to-rgba/hex-to-rgba';\n\ninterface GetSharedColorScheme {\n  color?: string;\n  variant: 'outline' | 'filled' | 'light' | 'gradient' | 'white' | 'default';\n  gradient?: { from: string; to: string; deg: number };\n  theme: MantineTheme;\n}\n\nexport interface MantineGradient {\n  from: string;\n  to: string;\n  deg?: number;\n}\n\nconst DEFAULT_GRADIENT = {\n  from: 'indigo',\n  to: 'cyan',\n  deg: 45,\n};\n\n/**\n * Provides shared theme styles for components that use theme.colors:\n * Button, ActionIcon, Badge, ThemeIcon, etc.\n */\nexport function getSharedColorScheme({ color, theme, variant, gradient }: GetSharedColorScheme) {\n  if (variant === 'light') {\n    return {\n      border: 'transparent',\n      background: hexToRgba(\n        getThemeColor({ theme, color, shade: theme.colorScheme === 'dark' ? 9 : 0 }),\n        theme.colorScheme === 'dark' ? 0.35 : 1\n      ),\n      color: getThemeColor({ theme, color, shade: theme.colorScheme === 'dark' ? 2 : 9 }),\n    };\n  }\n\n  if (variant === 'default') {\n    return {\n      border: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[4],\n      background: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.white,\n      color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n    };\n  }\n\n  if (variant === 'white') {\n    return {\n      border: 'transparent',\n      background: theme.white,\n      color: getThemeColor({ theme, color, shade: 7 }),\n    };\n  }\n\n  if (variant === 'outline') {\n    return {\n      border: hexToRgba(\n        getThemeColor({ theme, color, shade: theme.colorScheme === 'dark' ? 3 : 7 }),\n        0.65\n      ),\n      background: 'transparent',\n      color: getThemeColor({ theme, color, shade: theme.colorScheme === 'dark' ? 3 : 7 }),\n    };\n  }\n\n  if (variant === 'gradient') {\n    const merged = {\n      from: gradient?.from || DEFAULT_GRADIENT.from,\n      to: gradient?.to || DEFAULT_GRADIENT.to,\n      deg: gradient?.deg || DEFAULT_GRADIENT.deg,\n    };\n\n    return {\n      background: `linear-gradient(${merged.deg}deg, ${getThemeColor({\n        theme,\n        color: merged.from,\n        shade: 6,\n      })} 0%, ${getThemeColor({ theme, color: merged.to, shade: 6 })} 100%)`,\n      color: theme.white,\n      border: 'transparent',\n    };\n  }\n\n  // Filled variant as default\n  return {\n    border: 'transparent',\n    background: getThemeColor({ theme, color, shade: theme.colorScheme === 'dark' ? 8 : 6 }),\n    color: theme.white,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}