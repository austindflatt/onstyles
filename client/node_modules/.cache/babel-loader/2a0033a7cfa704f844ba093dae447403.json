{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useMantineTheme, useExtractedMargins, getThemeColor } from '@mantine/styles';\nimport useStyles from './Progress.styles.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nfunction getCumulativeSections(sections) {\n  return sections.reduce((acc, section) => {\n    acc.sections.push(__spreadProps(__spreadValues({}, section), {\n      accumulated: acc.accumulated\n    }));\n    acc.accumulated += section.value;\n    return acc;\n  }, {\n    accumulated: 0,\n    sections: []\n  }).sections;\n}\n\nconst Progress = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    className,\n    style,\n    value,\n    color,\n    size = \"md\",\n    radius = \"sm\",\n    striped = false,\n    \"aria-label\": ariaLabel,\n    classNames,\n    styles,\n    sections,\n    sx\n  } = _b,\n      others = __objRest(_b, [\"className\", \"style\", \"value\", \"color\", \"size\", \"radius\", \"striped\", \"aria-label\", \"classNames\", \"styles\", \"sections\", \"sx\"]);\n\n  const theme = useMantineTheme();\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color,\n    size,\n    radius,\n    striped\n  }, {\n    sx,\n    classNames,\n    styles,\n    name: \"Progress\"\n  });\n  const {\n    mergedStyles,\n    rest\n  } = useExtractedMargins({\n    others,\n    style\n  });\n  const segments = Array.isArray(sections) ? getCumulativeSections(sections).map((section, index) => /* @__PURE__ */React.createElement(\"div\", {\n    key: index,\n    className: classes.bar,\n    style: {\n      width: `${section.value}%`,\n      left: `${section.accumulated}%`,\n      backgroundColor: getThemeColor({\n        theme,\n        color: section.color,\n        shade: 7\n      })\n    }\n  })) : null;\n  return /* @__PURE__ */React.createElement(\"div\", __spreadValues({\n    className: cx(classes.root, className),\n    style: mergedStyles,\n    ref\n  }, rest), segments || /* @__PURE__ */React.createElement(\"div\", {\n    role: \"progressbar\",\n    \"aria-valuemax\": 100,\n    \"aria-valuemin\": 0,\n    \"aria-valuenow\": value,\n    \"aria-label\": ariaLabel,\n    className: classes.bar,\n    style: {\n      width: `${value}%`\n    }\n  }));\n});\nProgress.displayName = \"@mantine/core/Progress\";\nexport { Progress };","map":{"version":3,"sources":["../../../src/components/Progress/Progress.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  useMantineTheme,\n  DefaultProps,\n  MantineNumberSize,\n  getThemeColor,\n  MantineColor,\n  ClassNames,\n  useExtractedMargins,\n} from '@mantine/styles';\nimport useStyles from './Progress.styles';\n\nexport type ProgressStylesNames = ClassNames<typeof useStyles>;\n\nexport interface ProgressProps\n  extends DefaultProps<ProgressStylesNames>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Percent of filled bar (0-100) */\n  value?: number;\n\n  /** Progress color from theme */\n  color?: MantineColor;\n\n  /** Predefined progress height or number for height in px */\n  size?: MantineNumberSize;\n\n  /** Predefined progress radius from theme.radius or number for height in px */\n  radius?: MantineNumberSize;\n\n  /** Adds stripes */\n  striped?: boolean;\n\n  /** Replaces value if present, renders multiple sections instead of single one */\n  sections?: { value: number; color: MantineColor }[];\n}\n\nfunction getCumulativeSections(\n  sections: { value: number; color: MantineColor }[]\n): { value: number; color: MantineColor; accumulated: number }[] {\n  return sections.reduce(\n    (acc, section) => {\n      acc.sections.push({ ...section, accumulated: acc.accumulated });\n      acc.accumulated += section.value;\n      return acc;\n    },\n    { accumulated: 0, sections: [] }\n  ).sections;\n}\n\nexport const Progress = forwardRef<HTMLDivElement, ProgressProps>(\n  (\n    {\n      className,\n      style,\n      value,\n      color,\n      size = 'md',\n      radius = 'sm',\n      striped = false,\n      'aria-label': ariaLabel,\n      classNames,\n      styles,\n      sections,\n      sx,\n      ...others\n    }: ProgressProps,\n    ref\n  ) => {\n    const theme = useMantineTheme();\n    const { classes, cx } = useStyles(\n      { color, size, radius, striped },\n      { sx, classNames, styles, name: 'Progress' }\n    );\n    const { mergedStyles, rest } = useExtractedMargins({ others, style });\n\n    const segments = Array.isArray(sections)\n      ? getCumulativeSections(sections).map((section, index) => (\n          <div\n            key={index}\n            className={classes.bar}\n            style={{\n              width: `${section.value}%`,\n              left: `${section.accumulated}%`,\n              backgroundColor: getThemeColor({ theme, color: section.color, shade: 7 }),\n            }}\n          />\n        ))\n      : null;\n\n    return (\n      <div className={cx(classes.root, className)} style={mergedStyles} ref={ref} {...rest}>\n        {segments || (\n          <div\n            role=\"progressbar\"\n            aria-valuemax={100}\n            aria-valuemin={0}\n            aria-valuenow={value}\n            aria-label={ariaLabel}\n            className={classes.bar}\n            style={{ width: `${value}%` }}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nProgress.displayName = '@mantine/core/Progress';\n"]},"metadata":{},"sourceType":"module"}