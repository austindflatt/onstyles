{"ast":null,"code":"import { createStyles, getSizeValue } from '@mantine/styles';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar useStyles = createStyles((theme, {\n  spacing,\n  breakpoints,\n  cols\n}) => {\n  const gridBreakpoints = breakpoints.reduce((acc, breakpoint) => {\n    const breakpointSize = getSizeValue({\n      size: breakpoint.maxWidth,\n      sizes: theme.breakpoints\n    });\n    acc[`@media (max-width: ${breakpointSize}px)`] = {\n      gridTemplateColumns: `repeat(${breakpoint.cols}, minmax(0, 1fr))`,\n      gap: getSizeValue({\n        size: breakpoint.spacing || spacing,\n        sizes: theme.spacing\n      })\n    };\n    return acc;\n  }, {});\n  return {\n    root: __spreadValues({\n      boxSizing: \"border-box\",\n      display: \"grid\",\n      gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n      gap: getSizeValue({\n        size: spacing,\n        sizes: theme.spacing\n      })\n    }, gridBreakpoints)\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["../../../src/components/SimpleGrid/SimpleGrid.styles.ts"],"names":[],"mappings":";AAAA,IAAI,SAAS,GAAG,MAAM,CAAC,cAAvB;AACA,IAAI,mBAAmB,GAAG,MAAM,CAAC,qBAAjC;AACA,IAAI,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,cAApC;AACA,IAAI,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,oBAApC;;AACA,IAAI,eAAe,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,KAAX,KAAqB,GAAG,IAAI,GAAP,GAAa,SAAS,CAAC,GAAD,EAAM,GAAN,EAAW;AAAE,EAAA,UAAU,EAAE,IAAd;AAAoB,EAAA,YAAY,EAAE,IAAlC;AAAwC,EAAA,QAAQ,EAAE,IAAlD;AAAwD,EAAA;AAAxD,CAAX,CAAtB,GAAoG,GAAG,CAAC,GAAD,CAAH,GAAW,KAA1J;;AACA,IAAI,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,KAAU;AAC7B,OAAK,IAAI,IAAT,IAAiB,CAAC,KAAK,CAAC,GAAG,EAAT,CAAlB,EACE,IAAI,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,IAArB,CAAJ,EACE,eAAe,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAC,IAAD,CAAX,CAAf;;AACJ,MAAI,mBAAJ,EACE,KAAK,IAAI,IAAT,IAAiB,mBAAmB,CAAC,CAAD,CAApC,EAAyC;AACvC,QAAI,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,IAArB,CAAJ,EACE,eAAe,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAC,IAAD,CAAX,CAAf;AACH;AACH,SAAO,CAAP;AACD,CAVD;;AAYA,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAD,EAAQ;AAAE,EAAA,OAAF;AAAW,EAAA,WAAX;AAAwB,EAAA;AAAxB,CAAR,KAA2C;AACrE,QAAM,eAAe,GAAG,WAAW,CAAC,MAAZ,CAAmB,CAAC,GAAD,EAAM,UAAN,KAAqB;AAC9D,UAAM,cAAc,GAAG,YAAY,CAAC;AAAE,MAAA,IAAI,EAAE,UAAU,CAAC,QAAnB;AAA6B,MAAA,KAAK,EAAE,KAAK,CAAC;AAA1C,KAAD,CAAnC;AACA,IAAA,GAAG,CAAE,sBAAqB,cAAe,KAAtC,CAAH,GAAiD;AAC/C,MAAA,mBAAmB,EAAG,UAAS,UAAU,CAAC,IAAK,mBADA;AAE/C,MAAA,GAAG,EAAE,YAAY,CAAC;AAChB,QAAA,IAAI,EAAE,UAAU,CAAC,OAAX,IAAsB,OADZ;AAEhB,QAAA,KAAK,EAAE,KAAK,CAAC;AAFG,OAAD;AAF8B,KAAjD;AAOA,WAAO,GAAP;AACD,GAVuB,EAUrB,EAVqB,CAAxB;AAWA,SAAO;AACL,IAAA,IAAI,EAAE,cAAc,CAAC;AACnB,MAAA,SAAS,EAAE,YADQ;AAEnB,MAAA,OAAO,EAAE,MAFU;AAGnB,MAAA,mBAAmB,EAAG,UAAS,IAAK,mBAHjB;AAInB,MAAA,GAAG,EAAE,YAAY,CAAC;AAAE,QAAA,IAAI,EAAE,OAAR;AAAiB,QAAA,KAAK,EAAE,KAAK,CAAC;AAA9B,OAAD;AAJE,KAAD,EAKjB,eALiB;AADf,GAAP;AAQD,CApB0B,CAA3B","sourcesContent":["import { createStyles, MantineNumberSize, getSizeValue } from '@mantine/styles';\n\nexport interface SimpleGridBreakpoint {\n  maxWidth: MantineNumberSize;\n  cols: number;\n  spacing?: MantineNumberSize;\n}\n\ninterface SimpleGridStyles {\n  spacing: MantineNumberSize;\n  breakpoints: SimpleGridBreakpoint[];\n  cols: number;\n}\n\nexport default createStyles((theme, { spacing, breakpoints, cols }: SimpleGridStyles) => {\n  const gridBreakpoints = breakpoints.reduce((acc, breakpoint) => {\n    const breakpointSize = getSizeValue({ size: breakpoint.maxWidth, sizes: theme.breakpoints });\n    acc[`@media (max-width: ${breakpointSize}px)`] = {\n      gridTemplateColumns: `repeat(${breakpoint.cols}, minmax(0, 1fr))`,\n      gap: getSizeValue({\n        size: breakpoint.spacing || spacing,\n        sizes: theme.spacing,\n      }),\n    };\n\n    return acc;\n  }, {});\n\n  return {\n    root: {\n      boxSizing: 'border-box',\n      display: 'grid',\n      gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n      gap: getSizeValue({ size: spacing, sizes: theme.spacing }),\n      ...gridBreakpoints,\n    },\n  };\n});\n"]},"metadata":{},"sourceType":"module"}