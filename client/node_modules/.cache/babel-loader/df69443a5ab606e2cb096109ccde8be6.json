{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useSx, useExtractedMargins } from '@mantine/styles';\nimport { useUuid } from '@mantine/hooks';\nimport { AccordionItem } from './AccordionItem/AccordionItem.js';\nimport { useAccordionState } from './use-accordion-state/use-accordion-state.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst Accordion = forwardRef((_a, ref) => {\n  var _b = _a,\n      {\n    children,\n    initialItem = -1,\n    initialState,\n    state,\n    onChange,\n    multiple = false,\n    disableIconRotation = false,\n    transitionDuration = 200,\n    iconPosition = \"left\",\n    icon,\n    classNames,\n    styles,\n    style,\n    className,\n    id,\n    sx\n  } = _b,\n      others = __objRest(_b, [\"children\", \"initialItem\", \"initialState\", \"state\", \"onChange\", \"multiple\", \"disableIconRotation\", \"transitionDuration\", \"iconPosition\", \"icon\", \"classNames\", \"styles\", \"style\", \"className\", \"id\", \"sx\"]);\n\n  const {\n    sxClassName\n  } = useSx({\n    sx,\n    className\n  });\n  const uuid = useUuid(id);\n  const {\n    mergedStyles,\n    rest\n  } = useExtractedMargins({\n    others,\n    style\n  });\n  const items = React.Children.toArray(children).filter(item => item.type === AccordionItem);\n  const [value, onToggle] = useAccordionState({\n    multiple,\n    items,\n    initialItem,\n    state,\n    initialState,\n    onChange\n  });\n  const controls = items.map((item, index) => /* @__PURE__ */React.createElement(AccordionItem, __spreadProps(__spreadValues({}, item.props), {\n    icon: item.props.icon || icon,\n    iconPosition: item.props.iconPosition || iconPosition,\n    disableIconRotation,\n    key: index,\n    transitionDuration,\n    opened: value[index],\n    onToggle: () => onToggle(index),\n    classNames,\n    styles,\n    id: `${uuid}-${index}`\n  })));\n  return /* @__PURE__ */React.createElement(\"div\", __spreadValues({\n    style: mergedStyles,\n    ref,\n    className: sxClassName\n  }, rest), controls);\n});\nAccordion.Item = AccordionItem;\nAccordion.displayName = \"@mantine/core/Accordion\";\nexport { Accordion };","map":{"version":3,"sources":["../../../src/components/Accordion/Accordion.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { DefaultProps, useExtractedMargins, useSx } from '@mantine/styles';\nimport { useUuid } from '@mantine/hooks';\nimport {\n  AccordionItem,\n  AccordionItemStylesNames,\n  AccordionItemType,\n  AccordionIconPosition,\n} from './AccordionItem/AccordionItem';\nimport { useAccordionState, AccordionState } from './use-accordion-state/use-accordion-state';\n\nexport interface AccordionProps\n  extends DefaultProps<AccordionItemStylesNames>,\n    Omit<React.ComponentPropsWithRef<'div'>, 'onChange'> {\n  /** <AccordionItem /> components only */\n  children: React.ReactNode;\n\n  /** Index of item which is initially opened (uncontrolled component) */\n  initialItem?: number;\n\n  /** Initial state (controls opened state of accordion items) for uncontrolled component */\n  initialState?: AccordionState;\n\n  /** Controlled state (controls opened state of accordion items) */\n  state?: AccordionState;\n\n  /** onChange handler for controlled component */\n  onChange?(state: AccordionState): void;\n\n  /** Allow multiple items to be opened at the same time */\n  multiple?: boolean;\n\n  /** Open/close item transition duration in ms */\n  transitionDuration?: number;\n\n  /** Used to connect accordion items controls to related content */\n  id?: string;\n\n  /** Replace icon on all items */\n  icon?: React.ReactNode;\n\n  /** Should icon rotation be disabled */\n  disableIconRotation?: boolean;\n\n  /** Change icon position: left or right */\n  iconPosition?: AccordionIconPosition;\n}\n\ntype AccordionComponent = ((props: AccordionProps) => React.ReactElement) & {\n  displayName: string;\n  Item: typeof AccordionItem;\n};\n\nexport const Accordion: AccordionComponent = forwardRef<HTMLDivElement, AccordionProps>(\n  (\n    {\n      children,\n      initialItem = -1,\n      initialState,\n      state,\n      onChange,\n      multiple = false,\n      disableIconRotation = false,\n      transitionDuration = 200,\n      iconPosition = 'left',\n      icon,\n      classNames,\n      styles,\n      style,\n      className,\n      id,\n      sx,\n      ...others\n    }: AccordionProps,\n    ref\n  ) => {\n    const { sxClassName } = useSx({ sx, className });\n    const uuid = useUuid(id);\n    const { mergedStyles, rest } = useExtractedMargins({ others, style });\n    const items = React.Children.toArray(children).filter(\n      (item: AccordionItemType) => item.type === AccordionItem\n    ) as AccordionItemType[];\n\n    const [value, onToggle] = useAccordionState({\n      multiple,\n      items,\n      initialItem,\n      state,\n      initialState,\n      onChange,\n    });\n\n    const controls = items.map((item, index) => (\n      <AccordionItem\n        {...item.props}\n        icon={item.props.icon || icon}\n        iconPosition={item.props.iconPosition || iconPosition}\n        disableIconRotation={disableIconRotation}\n        key={index}\n        transitionDuration={transitionDuration}\n        opened={value[index]}\n        onToggle={() => onToggle(index)}\n        classNames={classNames}\n        styles={styles}\n        id={`${uuid}-${index}`}\n      />\n    ));\n\n    return (\n      <div style={mergedStyles} ref={ref} className={sxClassName} {...rest}>\n        {controls}\n      </div>\n    );\n  }\n) as any;\n\nAccordion.Item = AccordionItem;\n\nAccordion.displayName = '@mantine/core/Accordion';\n"]},"metadata":{},"sourceType":"module"}